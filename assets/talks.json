[{"id":"101","name":"鈴木　庸氏","title":"PythonとGoogle Optimization Toolsの最適化ライブラリで、「人と人の相性を考慮したシフトスケジューラ」を作ってみた。","abstract":"Pythonを使って店舗施設や工場のシフトスケジュール作成の高度化に取り組んでみました。スケジュール作成者への負荷を減らし、人と人との相性考慮により施設全体の生産性向上に繋げます。","talk_format":"Talk (45 minutes)","profile":"物流や生産計画の最適化＆シミュレーション、分析に携わっています。リーディングエッジ社所属。","room":"Room A+B","day":"1","no":"1","room_id":"1001","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Project case studies","description":"工場や店舗施設における業務効率向上のため、Pythonによるシフトスケジュール作成の高度化に取り組んでみました。スケジュール作成は施設管理者の負担となる一方で、最適なスケジュールを作成することは、従業員のモチベーションを高め、施設全体の業務効率向上に繋がると考えられます。今後スタンダードとなる可能性のある数理最適化ソルバーGoogle Optimization Toolsを使用し、人と人の相性による生産性を数値化したデータから、シフトスケジューリング問題を解く2次計画アルゴリズムを開発しました。本発表では、Google Optimization Toolsに含まれる最適化ライブラリ群とそれらの概念、Pythonプログラムの実装、結果の評価、今後の目標であるシステム公開方法について紹介いたします。また、最近人気のあるメタヒューリスティック解法をPythonで実装した結果と、ソルバーによる厳密解法の結果との比較結果を紹介し、計算速度や解の最適性、高速化の方法、対応できる問題規模の差を知見として発表し、現実的な問題に対応するためのノウハウをご紹介いたします。\n","papercall_name":"鈴木庸氏"},{"id":"102","name":"知野 雄二/Yuji Chino","title":"Pythonと便利ガジェット、サービス、ツールを使ってセンシング〜見る化してみよう","abstract":"Pythonと便利ガジェット／サービス／ツールを使って、まかせるところはまかせて、「つくらない」「やらない」をテーマに、センシング〜Webで見える化までを目指します。","talk_format":"Talk (45 minutes)","profile":"日本システム技研所属。Webエンジニア。主はバックエンド。ハードは苦手なので便利ガジェットを使ってIoTやってます！","room":"Small Exhibition Hall","day":"1","no":"1","room_id":"1002","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"extending and embedding python in hardware","description":"センシング、クラウド、Webにわけて紹介していきます。\nいくつかのサービス、ライブラリを使用するので、正直、最初は使い方で時間がかかってしまったり、覚えるのが大変かもしれません。\nそれでも、使うことにより「作らなくてよい」「やらなくてよい」「任せられる」部分もたくさんあります。\nその分、やりたいことに集中でき、Pythonのコード量も減りよい面もたくさんあります！\n\n## アジェンダ\n\n- センシング\n  - おなじみのRaspberry Pi +αを使って簡単さくっとセンシング\n  - クラウドへの送信もあのサービスを使って簡単にしちゃいましょう\n- クラウド\n  - AWSの構築もツールで簡単デプロイ\n  - あのサービスをつかうことにより、クラウド連携が簡単になる\n- Web\n  - おなじみのDjangoと便利なライブラリでさくっと見える化しちゃいましょう\n  - サーバへもさくっとデプロイ\n- コスト\n  - 初期コスト、ランニングコストについて\n    - いろいろなサービスを使用しているので気になりますよね。実績ベースで紹介します！","papercall_name":"Yuji Chino"},{"id":"103","name":"芝田 将","title":"PythonとAutoML","abstract":"データ分析の活用の幅の広がりに伴い、AutoMLの重要性が増してきました。本セッションでは、AutoMLの基礎事項から研究のトレンド、注目すべきPythonのOSSライブラリの紹介を行ないます。","talk_format":"Talk (45 minutes)","profile":"Research engineer at AI Lab. 共訳書 エキスパートPythonプログラミング改訂2版","room":"Convention Hall UME","day":"1","no":"1","room_id":"1003","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Intermediate","tags":"Machine learning and data science","description":"1. AutoMLの全体像\n    1. AutoMLを構成する主要な3つの要素技術\n1. ハイパーパラメーター最適化: \n    1. 3つの代表的なベイズ最適化手法: Gaussian Process, TPE, SMAC3\n    1. バンディットベースの枝刈り手法: Successive Halving, HyperBand\n    1. 各種Pythonライブラリの紹介と使い勝手、実装品質、開発状況、使用時の注意点について\n        1. 私が開発しているDefine-by-Run上でGPベースのベイズ最適化をアルゴリズムを使えるライブラリの注意点\n        1. 各種OSSが実装している枝刈り手法の本来の論文とは挙動が大きくことなることの解説\n1. 特徴量エンジニアリング\n    1. 特徴量生成: Featuretoolsの紹介と使い方、具体的にどのような特徴量が生成できるのか\n    1. 特徴量選択:\n        1. `scikit-learn.feature_selections` パッケージが提供する各種特徴量選択アルゴリズムの解説\n        1. Decision treeと特徴量選択の話\n        1. borutaの特徴量選択アルゴリズムと使い方\n1. モデル選択\n    1. モデル選択に関する議論・研究の紹介\n    1. ハイパーパラメーター最適化ライブラリを使ったモデル選択\n    1. auto-sklearnの紹介\n1. (残り時間に応じて) Google Cloud AutoMLなど外部のAutoMLソリューションの紹介\n    1. AutoML Tables\n    1. AutoML Vision\n    1. AutoML Natural Language","papercall_name":"Masashi SHIBATA"},{"id":"104","name":"Takanori Suzuki","title":"Automate the Boring Stuff with Slackbot","abstract":"I created a chatbot to automate various boring tasks. In this talk, I will explain how to create and extend a bot and work with a libs and APIs.","talk_format":"Talk (45 minutes)","profile":"Takanori(@takanory) is a Vice Chair of PyCon JP Committee. He is also a Director of BeProud Inc.","room":"Convention Hall UGUISU","day":"1","no":"1","room_id":"1004","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Intermediate","tags":"Project case studies","description":"日本語でも英語でも発表可能です。また、時間も30分に調整可能です。\nIf you like 30 minutes, I can reduce case studies and adjust the time.\nThe outline of my presentation is below:\n\n- Who am I (1m)\n- Back ground, motivation (2m)\n  - Lots of tasks to hold Conference\n  - Staffs ask me the same thing\n  - Programmer is Lazy\n  - Let's create a secretary\n- Goal(1m)\n  - You'll learn how to create simple chatbot(one way)\n  - You'll learn how to create interactive bot\n  - You'll learn how to extend bot using libraries and APIs through various case studies\n- Why Slack? (1m)\n  - Easy to access Slack\n  - I want to do everything in Slack\n- Simple integration with Incoming Webhook (5m)\n  - System overview(https://api.slack.com/incoming-webhooks)\n  - Create Incoming Webhooks Integration on Slack: Generate Webhook URL\n  - Send a simple message with cURL\n  - Send a simple message with Requests\n  - Send a complex message with Requests\n  - Summary\n- How to create slackbot (5m)\n  - System overview\n  - Create bot user on Slack\n  - Install slackbot library\n  - Create a simple bot with slackbot\n  - Simple plugin with slackbot\n  - Run slackbot\n- Extend slackbot (5m)\n  - listen_to and respond_to decolator\n  - emoji reaction(message.react() method)\n  - Extract parameters on chat message\n  - settings of slackbot\n  - Attachments support\n  - Summary of slackbot\n- Case study (18m)\n  - Calculator function using SymPy: Install SymPy, sample code of command\n  - Plusplus function using Peewee ORM: Install Peewee, sample code of model and command\n  - Display JIRA issue and Search issues\n    - System overview\n    - Install Python JIRA\n    - Authentication of JIRA API\n    - Get Issue object and search issues code\n    - JIRA API and jira package\n  - Create multiple issues from a template\n    - Motivation\n    - System overview\n    - Google Authorization is very Complex\n    - Get Spreadsheet Data with Sheets API\n    - Create JIRA Issue\n    - Sample template command\n  -  Account management of G Suite\n    - Motivation\n    - System overview\n    - Get user list, Insert user\n    - Suspend, Resume, Delete user\n    - I can completely forget Google Admin web site\n- Summary(1m)\n  - Incoming Webhooks\n  - Slackbot\n  - Slackbot with Libraries and APIs\n- Next steps (1m)\n  - Let's make your own Slackbot\n  - Let's connect your bot with libraries and APIs\n  - Automate your Boring Stuff with bot\n- Questions and Answers","papercall_name":"Takanori Suzuki"},{"id":"105","name":"武山 文信","title":"Excel と Python による社会インフラシステムの設定ファイルの自動生成","abstract":"\nExcelデータから設定ファイルを生成するツールを開発する際に用いた、ツールの配布方法、データクラスオブジェクトの作成方法、テンプレートエンジンによる設定ファイルの生成方法ついて説明する。","talk_format":"Talk (45 minutes)","profile":"東芝グループ内のソフトウェア開発部門のツール開発やプロセス改善などの支援と研究開発に従事","room":"Room D","day":"1","no":"1","room_id":"1005","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Intermediate","tags":"Best practices","description":"社会インフラシステムは、仕向け毎に仕様の一部が異なることが多く、仕様の差異を多数の設定パラメータとして管理することがある。このような設定パラメータはしばしば Excel を用いてドキュメント化され、同時に、マクロとして実装されたツールにより、アプリケーションが解釈可能な設定ファイルの生成が行われている。しかしながら、このようなツールにはソースコードとしてのマクロの構成管理の難しさや、継続的インテグレーション（CI）を実現するツールからの実行が困難などの課題がある。\n\nそこで、我々はある社会インフラシステムの向けに、Excel で管理された設定データをもとに、設定ファイルを生成するツールを Python で開発した。本発表では、ツールの開発で得られた以下の知見について述べる。\n\n\n(1) Embeddable 版 Python のバンドル\n-----------------------------------------------\n\n社会インフラシステムのライフサイクルは10年以上にわたるため、長期間ツールも実行可能である必要がある。一方で、ソースコードと使用するライブラリを記述した requirements.txt を共有し、それぞれの環境で pip でパッケージをインストールする方法では、必要なパッケージがリポジトリに存在し続ける保証はなく、同じ環境を再現できなくなる可能性がある。そこで、Embeddable 版の Python をベースに必要なライブラリを追加した Python 実行環境を作成し、ツールとバンドルして利用者間で共有する方法を採用した。\n\n\n(2) openpyxl による Excel ファイルの読み込みとデータクラスへの変換\n---------------------------------------------------------------------\n\nPython から Excel データを読み込む方法はいくつかあるが、本ツール openpyxl を採用した。openpyxl は Excel 2010 以降のドキュメントを読み書きできるライブラリである。openpyxl は Excel ファイルを直接読み込むことができるため、Excel がインストールされていないコンテナ上でも動作し、CI 環境を容易に構築できる。\n\nまた、Excel ファイルのテーブルの行を Python 3.7 から導入されたデータクラスのオブジェクトとして読み込めるようにした。Excel 上に記載した独自形式のスキーマ情報をもとにデータクラスを動的に生成することで実現している。\n\n\n(3) Jinja2 による設定ファイルの生成\n-----------------------------------------------\n\n対象としたシステムの中には、設定ファイルの全体ではなく、一部のみを自動生成する必要のあるものがあった。このような設定ファイルの生成には、Web アプリケーションで使用されるテンプレートエンジンンの Jinja2 を使用した。これにより、手作業で編集する部分については、Jinja2 テンプレートを編集することで従来通りの方法を維持しつつ、一部のみを自動生成できる。","papercall_name":"武山 文信"},{"id":"106","name":"末田卓巳 (Takumi SUEDA)","title":"Yet Another Isolation - Debian Packageと紐づく環境分離","abstract":"Python環境の分離ノウハウは数あれど、多くのPythonプロジェクトを1台のマシンに詰め込み、統一管理するノウハウはほぼありません。今回は、それを実現した手法と道のりを紹介します。","talk_format":"Talk (45 minutes)","profile":"Twitter, GitHub: @puhitaku | GROOVE X, Inc. にてLinuxやFPGAを担当。","room":"Room A+B","day":"1","no":"2","room_id":"1001","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Intermediate","tags":"Packaging","description":"venv に代表される「環境分離」を実現するツール類は、開発対象を問わず広く利用されています。開発者が自らのマシンの中で複数のPython環境を共存させる ― 例えば、venv でプロジェクト単位の \"箱庭\" を作る ― ことについては、これまでたくさんのノウハウが蓄積され、インターネットで広く共有されています。\n\nしかし、\n - もしその作っているソフトウェアが、自分だけのものではない共有のシステムで動くとしたら\n - もしそのシステムにインストールされるソフトウェアが全部Debian Package（Debian, Ubuntu等で使われるパッケージ）の単位で管理されているとしたら\n我々はどうすればいいでしょうか。\n\n心配事はたくさんあります。Debianパッケージでインストールされたモジュールはグローバルな dist-packages に置かなければなりませんし、社内開発のプログラムともなれば、Debian repositoryに用意されていないパッケージも多く必要になります。直感的には「APTのインストールをフックしてpipで依存パッケージも入れればいい」となりますが、その先には、自作したDebian パッケージ間で依存の衝突が発生する、install / remove の順番に可換性がない、副作用が残る、など文字通りの「悪夢」が待ち受けています。\n\nそこで、我々は「APT の install / remove に連動して Python 環境を生成 / 削除し、グローバルな Python 環境やパッケージ間の相互作用を排除するツール」の開発を行いました。今回は、これにまつわる思考や実現方法について紹介します。\n\n発表の流れとしては、\n\n - 社内で本ツールが必要になった背景の紹介\n - 類似技術を使わなかった理由\n - 開発目標の決定\n\nを経緯として紹介し、その後は\n\n - モジュールとして使うvenv\n - CLI・API設計\n - shebangから呼び出す\n - テスト駆動開発による堅牢さ向上\n\nなどといった具体的なテクニックについて紹介します。","papercall_name":"Takumi Sueda"},{"id":"141","name":"Renyuan Lyu","title":"Using Python in Music Signal Processing, Speech Recognition and Intent Classification in Chatbot","abstract":"In this speech, I will sort out  my previous speeches at Pycon JP \nfor several consecutive years (2015~2017). The topics includes using Python to study signal processing, especially in speech spectrum analysis, speech recognition, and intent recognition in chat bots. By the way, I also wish to share my experience and passion for learning and enjoying Japanese songs and language, all via the help of Python.","talk_format":"Talk (45 minutes)","profile":"I am a university faculty member, engaged in teaching and research in the Department of Computer Science, Chang Gung University, TAIWAN. My expertise is probability, statistics, signal processing, speech/pattern recognition, and artificial intelligence.","room":"Small Exhibition Hall","day":"1","no":"2","room_id":"1002","lang_of_slide":"日本語と英語/Japanese and English","lang_of_talk":"英語/English","audience_level":"","tags":"Invited Talk","description":"","papercall_name":""},{"id":"108","name":"Sebastian Witowski","title":"It’s 2019 and I’m still using Python 2. Should I be worried?","abstract":"What will happen with Python 2 in 2020?\nWhat are the risks of staying on the unsupported version?\nWhat are the possible solutions?\nHow to go through the migration process?","talk_format":"Talk (45 minutes)","profile":"I’m a former CERN DevOps that turned into a Python consultant and trainer","room":"Convention Hall UME","day":"1","no":"2","room_id":"1003","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Intermediate","tags":"Best practices","description":"The official End of Life date for Python 2 is set to 01.01.2020. What does it mean for projects that are still using it? Will someone pull the plug and everything will stop working on that day? In this talk, I will discuss the future of Python 2, the dangers of using the unsupported version of Python and opportunities for those who want to migrate to Python 3. But, I will also explain what choice you have if you __really__ can't move to Python 3 yet.\n\nThis is not a _“how we migrated to Python 3 at Foo company”_ type of talk. There are many other talks that explain the migration process and outcome in various companies. I want to take a different approach and focus on comparing the options that you have: rewriting your Python project, migrating it, staying on Python 2 or moving to a different implementation, like PyPy (together with pros and cons of each). And for those of you who decide to migrate to Python 3, I will explain how to prepare to this kind of task, what tools and techniques can help you and what problems you might encounter.","papercall_name":"Sebastian Witowski"},{"id":"109","name":"野村 将寛","title":"機械学習におけるハイパーパラメータ最適化の理論と実践","abstract":"機械学習システムの構築において、ハイパーパラメータ最適化は避けては通れない問題である。本発表では、ハイパーパラメータ最適化における最新の研究を含んだ理論の解説と、実践への適用可能性を議論する。","talk_format":"Talk (45 minutes)","profile":"株式会社サイバーエージェントにてハイパーパラメータ最適化の研究に従事。2019年より産総研特定集中研究専門員（兼務）。","room":"Convention Hall UGUISU","day":"1","no":"2","room_id":"1004","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Advanced","tags":"Python libraries","description":"* ハイパーパラメータ最適化問題とは\n    * 問題設定 : ブラックボックス最適化\n    * 具体例\n        * 機械学習モデルのチューニング\n        * サーバーミドルウェアのチューニング\n\n* ブラックボックス最適化手法\n    * グリッドサーチ、ランダムサーチ\n    * ベイズ最適化\n        * GP-EI (Gaussian Process with Expected Improvement)\n        * TPE (Tree-structured Parzen Estimator)\n        * SMAC (Sequential Model-based Algorithm Configuration)\n    * CMA-ES\n    * 各手法のメリット・デメリット\n\n* 最新の研究 〜ブラックボックスからの脱出〜\n    * マルチフィデリティ最適化\n        * 学習曲線の予測に基づく早期停止\n        * 順序関係に基づく早期停止\n    * マルチタスクベイズ最適化\n\n* Pythonライブラリ\n    * Optuna: PFNのハイパーパラメーター最適化フレームワーク\n        * Define-by-Runによる記述 (hyperoptとの比較)\n        * 枝刈り機能の解説\n    * Ax: FacebookによるAdaptive Experimentationプラットフォーム\n        * オフライン評価との組み合わせ\n        * A/Bテストの効率化\n        * 高度な可視化機能の紹介\n\n* まとめ\n","papercall_name":"Masahiro Nomura"},{"id":"110","name":"大島和輝","title":"Djangoで実践ドメイン駆動設計による実装","abstract":"ドメイン駆動設計のクリーンアーキテクチャなどの実装方法ついてPytonのサンプルコードはあまり見かけません。 本セッションではDDDの用語や概念などについをDjangoのサンプルを用いてお話しします。","talk_format":"Talk (45 minutes)","profile":"DjangoでBtoC、CtoC向けのWEBアプリケーションを開発しているサーバーサイドエンジニアです。","room":"Room D","day":"1","no":"2","room_id":"1005","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Intermediate","tags":"Web programming(including web frameworks) ","description":"複雑化してきたアプリケーションの開発で、ドメイン駆動設計の手法を一部取り入れた例などが最近出てきました。\nアプリケーションの規模が増していくにつれて、MVCでの実装を続けていると、Fat ModelやFat Contollerと呼ばれる現象が出てくる際に、解決策の一つとしてDDDの手法などが最近話題になっています。\n \nしかし、ドメイン駆動設計界隈では有名な書籍である「エリックエヴァンスのドメイン駆動設計」は内容が抽象的で難解なことで有名です。\nそれを噛み砕いて説明したWEB上でのサンプルコードなどは、Go,C#,Javaなどの静的片付け言語などを中心に多く見かけるものの、Pythonなどの動的型付け言語での資料はなかなかありません。\n \nDjangoの特徴の一つとしては、WEBアプリケーションでは特に普及しているLaravel PHPやRuby on Railsと違って、アプリケーションを分けてドメイン事に区切りやすいアーキテクチャであることです。これはDDDのクリーンアーキテクチャなどを実装しやすく相性が良いと考えています。\n\n\n本発表では、DDDなどによく出てくるアーキテクチャの一つであるクリーンアーキテクチャなどを、Django上で実装する方法についてサンプルコードを交えてお話します。\n\n\nちなみにDDDには戦略的設計と戦術的設計の二つがあるものの、戦略的設計については解説せず、具体的なコードの実装方法などを解説する戦術的設計について、海外のカンファレンスなどで見かけた資料や、自分なりの経験談などを元に発表します。\n\n\n* DDDの概念\n* DDDの基本的な概念\n    - MVCなどの問題点\n\n    - 戦略的設計と戦術的設計の違い\n    - クリーンアーキテクチャとは何か\n    - 各アーキテクチャの違いを説明\n* ValueObject, Entity, DomainService, ApplicationServiceなどの用語を説明\n\n* サンプルのコードを元にそれぞれのポイントなどを説明\n\n* DIP(依存性逆転の法則)とPythonでの実装方法\n* Django上でのDIコンテナの利用方法\n\n\n\n話さないこと\n\n\n* DDDの戦略的設計\n* CQRSでの実装方法","papercall_name":"しまかぜsoft"},{"id":"111","name":"Kir Chou","title":"SupportingPython3 in Large Scale Project","abstract":"In this talk, the speaker will share his execution plan of supporting python3 in one of the most iconic large-scale projects: Amazon retail search engine. The talk will focus on the execution plan without company internal technologies, and avoid repeating content in most of previous talks, such as “how to make code python2/3 compatible?” and “why should you use python3?” and “how difficult to move to python3?”","talk_format":"Talk (30 minutes)","profile":"A code monkey builds search services in Amazon jungle. He gave two talks in PyCon TW before. This will be his first talk in PyCon JP.","room":"Room A+B","day":"1","no":"3","room_id":"1001","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Intermediate","tags":"Project case studies","description":"Python2 will retire in 2020 January first, just few months later. If you have watched Jason Fried's talk in PyCon2018 about the 5 years fight to move from python2 to python3 in FaceBook, this will be another similar talk, but in a different company, one of the oldest search engine in the world - Amazon product search. This talk is not about making your code python2/3 compatible, instead, it's targeting to explain the challenge to achieve supporting python3 in large scale project, and what treatment can be applied.","papercall_name":"Kir Chou"},{"id":"112","name":"Marc-Andre Lemburg","title":"PyRun - Shipping the Python 3.7 runtime in just 4.8MB","abstract":"Sub-title: Putting Python on a diet without losing functionality\n\nRunning Python tools on Unix often requires several 100MB of packages. PyRun avoids this by providing a Python runtime + stdlib in a single 4.8MB file, which can be \"installed\" by simply copying the binary to the destination system.","talk_format":"Talk (30 minutes)","profile":"Marc-Andre is a Python Core Developer, PSF Founding Fellow, EuroPython Society Board Member and has been involved with Python and the community since 1994. He runs his own consulting business as CEO of eGenix.com and is CTO of the fintech company Point Nine.","room":"Small Exhibition Hall","day":"1","no":"3","room_id":"1002","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Intermediate","tags":"Python libraries","description":"Python has become the defacto standard tool for many people to write tools, command scripts, smaller applications and even large applications.\n\nOn Windows, it is fairly easy to build application bundles using e.g. py2exe, but on Unix, the situation is less obvious, unless you want to rely on OS specific Python distributions, which often require severall 100MB with of installation on the system and are usually customized in distribution specific ways.\n\nInstead of relying on OS installed Python distributions on Unix, our open-source eGenix PyRun provides a more or less complete Python runtime (interpreter and stdlib modules) in a single file, which can be \"installed\" by simply copying the binary to the destination system. The file can be as small as 4.8MB for Python 3.7, by using compressors such as upx.\n\nDue to its size, it's also the perfect Python distribution for Docker containers.\n\nThe talk will show how PyRun works, is built, how to customize it to include additional modules and applications.","papercall_name":"Marc-Andre Lemburg"},{"id":"113","name":"小川 英幸","title":"Dashとオープンデータでインタラクティブに日本経済を可視化する","abstract":"分析ウェブフレームワークのDashでデータをインタラクティブに可視化します。Dashを使うことにより、組織において、これまで以上にデータを生かせるということを話します。","talk_format":"Talk (30 minutes)","profile":"合同会社長目CEO。Python Kansai、はんなりPython オーガナイザー。","room":"Convention Hall UME","day":"1","no":"3","room_id":"1003","lang_of_slide":"日本語と英語/Japanese and English","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Web programming(including web frameworks) ","description":"# Dashとオープンデータでインタラクティブに日本経済を可視化する\n\n## データの可視化の重要性\nデータを取った後まず行うことは、データを見る作業です。そこで色々なアイデアをデータからくみ取ります。そのあと機械学習のモデルにデータを渡すわけですが、世間では機械学習のモデルに注目が集まりがちで、その前の段階、データを見て何が有効か探すというところがおろそかになっています。また、実はデータを見ることにより非常に多くのことが分かります。可視化は機械学習やディープラーニングのように難しくなく、だれでも簡単にできるものですが、その効果は絶大です。そのため、可視化を取り上げます。     \n      \n## Dashの有効性\nPythonには可視化ツールがたくさんありますが、中でもDashが優れているのは      \n\n- インタラクティブにデータを可視化できる      \n- そのため、多くのデータを共有できる      \n- それをウェブで共有できる       \n- それをPythonだけで書ける       \n      \nという点です。    \nデータ分析に関するプレゼンテーションを行う際、見易さなどの制約から、使われるグラフのデータ量はかなり少なくなります。そのため、実際の事柄の複雑さは排除され、下手をすれば、一本のシナリオしか見えなくなり、聞いている方がからすると退屈なものになります。     \nDashを使えばグラフをインタラクティブに作成でき、多くのデータが共有可能です。またウェブにあげるのも簡単であるため、各人が見たいデータを見れ、これまでにないレベルで、データからアイデアを引き出せます。 ウェブにあげるのも簡単なので、ウェブに詳しくない人でもアプリを作って容易に共有することができます。    \nまた、データをnumpy、pandasを使って色々な変形を行いながら、それをそのまま、ウェブアプリケーションに使えます。\n      \n## 日本経済を可視化する\n最近話題の書籍「ファクトフルネス」ではデータを基に世界を正しく見るということと、世界は人々が思っているのとは逆に、良くなっていることが述べられました。日本経済はどうでしょう？このプレゼンテーションでは、Dashの使い方を知ると共に、日本経済に関しても知ることができます。データ分析にはドメイン知識が重要です。証券アナリスト資格を持つ私と一緒に日本経済を見ましょう。     \nオープンデータは政府などが出すデータですが、PDFでの表示を目的に作られているデータが多く、前処理が結構つらくなります。その辺りのPandas等での前処理にも触れます。     \n      \nアジェンダ    \n\n- データ可視化の重要性    \n- Dashの基本的な使い方     \n- データのPandas等を使った前処理     \n- 可視化に使いやすいデータの形（ロングフォームデータ、ワイドフォームデータ）     \n- Dashをインタラクティブにする、コールバックの解説     \n- ウェブでの共有    \n- 各種コンポーネントの使い方     \n- データは日本経済に関するオープンデータ     \n      \n## 以前作ったもの\n以前、日本経済のデータを扱ったものではないものの、データの可視化、Dashに関するプレゼンテーションを行った時に作ったものがあります。そのウェブアプリケーション（heroku無料利用なのでちょっと開くのに時間がかかります）とgithubのリンクです。      \n     \n- ウェブアプリケーション： [https://dash-presentation.herokuapp.com/](https://dash-presentation.herokuapp.com/)\n- github:  [https://github.com/mazarimono/pyosaka201904](https://github.com/mazarimono/pyosaka201904)","papercall_name":"小川　英幸"},{"id":"114","name":"長谷場 潤也","title":"Pie Meets Py ― PythonでAndroidアプリをつくろう","abstract":"PythonでAndroidアプリを開発するフレームワークを取り上げ、利用方法をご紹介するとともに、それぞれの特徴を比較します。新しい令和の時代にPythonの新しい可能性を感じてください。","talk_format":"Talk (30 minutes)","profile":"仕事ではPythonにあまり縁のないAndroidエンジニア兼Webエンジニア。好きな大阪桐蔭は中村剛也。","room":"Convention Hall UGUISU","day":"1","no":"3","room_id":"1004","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"GUI and games","description":"# 概要\n\nAndroidアプリをPythonで実装する手法として、以下のフレームワークを取り上げます。\n\n- [Chaquopy](https://chaquo.com/chaquopy/)\n- [React Native](https://facebook.github.io/react-native/) + [Transcrypt](https://www.transcrypt.org/)\n- [Kivy](https://kivy.org/)\n\nそれぞれの環境構築の方法、コードの書き方、ツールの使用方法などをご紹介します。また、それぞれのフレームワークの特徴を比較することで、ユースケースに合わせたフレームワーク選択のポイントを解説します。\n\nPie（Android 9.0のコードネーム）がPythonに出会った世界を体験してください。\n\nなお、一部の内容についてはiOSアプリ開発にも役立てていただける内容だと考えています。\n\n## Chaquopy\n\nKotlinやJavaの代わりにPythonを利用することが可能になるAndroid Studio用のプラグイン、およびそのプラグインから呼び出されるツール群です。\n\n## React Native + Transcrypt\n\nReact NativeはJavaScriptによるクロスプラットフォーム開発フレームワークです。TranscryptはPythonをJavaScriptに変換するAltJSです。これらを組み合わせることでPythonによる実装が可能になります。\n\n## Kivy\n\nPythonによるクロスプラットフォーム開発フレームワークです。スマートフォンだけでなくPC向けのアプリケーションも開発することができます。\n\n# 目次(仮)\n\n- Androidアプリ開発とは\n- Chaquopyの紹介\n- React Native + Transcryptの紹介\n- Kivyの紹介\n- 各フレームワークの比較\n- 利用シーンの検討\n- まとめ\n\n# 対象\n\n- Androidアプリ開発に興味がある方（開発の経験は前提としません）\n- システム全体をPythonで構築したい方\n- ちょっと変わったPythonの使い方を知りたい方","papercall_name":"長谷場 潤也"},{"id":"115","name":"池田 大志","title":"Python による日本語自然言語処理 〜系列ラベリングによる実世界テキスト分析〜","abstract":"日本語解析のための自然言語処理ツール nagisa の開発を行っています。 今回のトークでは、本ツールの系列ラベリング学習機能を用いて、開発現場で応用可能なテキストデータの分析方法をご紹介します。","talk_format":"Talk (30 minutes)","profile":"奈良先端科学技術大学院大学 自然言語処理学研究室（松本研）出身。 現在は企業にて、自然言語処理に関する研究開発に従事。","room":"Room D","day":"1","no":"3","room_id":"1005","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Machine learning and data science","description":"現在、[nagisa](https://github.com/taishi-i/nagisa \"nagisa\") という日本語解析のための自然言語処理ツールの開発を行っています。\n本ツールは `pip install nagisa` でインストール可能であり、下記のようにシンプルな単語分割と品詞タグ付けの関数を提供します。\n\n    import nagisa\n    text = 'Pythonで簡単に使えるツールです'\n    words = nagisa.tagging(text)\n    print(words)\n    #=> Python/名詞 で/助詞 簡単/形状詞 に/助動詞 使える/動詞 ツール/名詞 です/助動詞\n\n最新バージョンでは、系列ラベリングの学習機能を実装し、下記のように１行のプログラムで簡単に系列ラベリングモデルの学習が可能です。\n（※ 自然言語処理分野での系列ラベリングとは、文の各単語にラベルを与える手法です。テキスト中から会社名や人名を抽出する固有表現抽出や単語の品詞を推定する品詞タグ付けなどのタスクが存在します。）\n\n    nagisa.fit(train_file, dev_file, test_file, model_name)\n\n今回のトークでは、本ツールの[チュートリアル](https://nagisa.readthedocs.io/en/latest/tutorial.html \"tutorial\")を参考にして、\nリカレントニューラルネットによる系列ラベリング手法を用いて、開発現場で応用可能なテキストデータの分析方法を説明します。\n具体的には、一般公開されている日本語のデータセットを利用して、テキスト中から会社名や人名を抽出する「固有表現抽出技術」を開発現場で活用する方法について説明します。\n\nまた、本トークを通じて、[PyCon2018のポスター発表](https://qiita.com/taishi-i/items/bb8e279e0feb5dc3dfb0 \"pycon2018\")では、ポスタースペースの都合上発表することができなかった下記の項目についてもご紹介します。\n\n##ニューラルネットワークを Python ライブラリ化するために組み込んだノウハウ\n- 前処理技術：日本語言語処理のための前処理 Tips\n- CPUでの高速化：DyNet を採用した理由\n- モデル圧縮方法：単語分割モデルと系列ラベリングモデルの共有方法\n\n##ライブラリーの特徴\n- 他の形態素解析器との差異：既存の形態素解析器（GiNZA、 janome、Stanford NLP）の説明と本ツールとの比較\n- nagisaの導入事例： Used by リポジトリの分析","papercall_name":"池田 大志"},{"id":"116","name":"Yusuke Miyazaki","title":"Python ウェブアプリケーションのためのプロファイラの実装","abstract":"Pythonウェブアプリのためのラインプロファイラwsgi_lineprofのデザインと内部実装について紹介します．Python処理系の仕組みや低レイヤーを扱うライブラリ開発への理解を深めてみましょう!","talk_format":"Talk (15 minutes)","profile":"Site Reliability Engineer / ymyzk.com","room":"Room A+B","day":"1","no":"4","room_id":"1001","lang_of_slide":"English Only","lang_of_talk":"日本語/Japanese","audience_level":"Intermediate","tags":"Web programming(including web frameworks) ","description":"はじめに，このトークで取り上げる [wsgi_lineprof](https://github.com/ymyzk/wsgi_lineprof) の機能やデザイン，設計思想などを簡単に紹介します．次にプロファイラの実装に利用している様々な技術や仕組みについて紹介します．最後に今後の展望についてまとめます．\n\nこのトークでは以下のようなテーマを紹介します:\n\n* wsgi_lineprof について: 機能・デザイン・設計思想\n* プロファイラの実装に利用している技術や仕組み\n  * CPython のトレーシング C API\n  * CPython の AST・バイトコード\n  * WSGI\n  * Cython など","papercall_name":"Yusuke Miyazaki"},{"id":"117","name":"Haque Ishfaq; Hassan Sami Adnan; Samara Sharmeen; Hassan Saad Ifti; Atia Amin","title":"ML Algorithm to Detect Rare Clinical Events","abstract":"Recent advancement in artificial neural network and machine learning, has the potential of revolutionizing medical diagnostics. Algorithms can be used to classify images such as mammograms or be used in volumetric analysis for surgical resection. But machine learning algorithms still have limitations that need to be addressed before clinical deployment. The usual classification based machine learning algorithms are not enough. Instead we need a method that can learn high quality low dimensional representation of the data where we can achieve accurate clustering of different classes including for the classes for which we do not have any training data. To achieve this, we develop a generative model which would be able to learn latent representation space under which points coming from the same class are near each other and points coming from separate classes are far apart. We develop a novel loss function for training Variational Autoencoder (VAE) based generative models.","talk_format":"Talk (15 minutes)","profile":"This talk will be one of the 2 talks the authors are presenting at PyCon JP. It’s by a multidisciplinary team of 5 researchers. Each will cover certain aspects of the talk and engage in the discussion. The speakers have a long history of giving talks at their respective universities on related academic topics. Recently they presented this work at PyCon 2019, Cleveland OH. The talk will help create awareness of how Python can be implemented in healthcare and other related emerging areas.","room":"Convention Hall UME","day":"1","no":"4","room_id":"1003","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"All","tags":"Machine learning and data science","description":"Recent advancement in artificial neural network and machine learning, has the potential of revolutionizing medical diagnostics. The algorithms can be used to classify images such as mammograms or be used in volumetric analysis for surgical resection. But machine learning algorithms still have limitations that need to be addressed before clinical deployment. Trained only using the most common types of diagnostic models can create problems when very rare type of diagnostics need to be made that are seldom encountered. This can cause mistrust and rises questions regarding effectivity and sensitivity.\n\nFor high-stake application like this, the usual classification based machine learning algorithms are not enough. Instead we need a method that can learn high quality low dimensional representation of the data where we can achieve accurate clustering of different classes including for the classes for which we do not have any training data. This way the rare type of breast cancer we mentioned earlier would form its own cluster in the learned representation space and we would automatically be able to differentiate it from the other common types of cancer.\n\nTo achieve this, in this project, we develop a generative model which would be able to learn latent representation space under which points coming from the same class are near each other and points coming from separate classes are far apart. We develop a novel loss function for training Variational Autoencoder (VAE) based generative models. The novel loss function exploits ideas from metric learning literature where instead of maximizing classification accuracy, neural networks are trained to map images coming from the same class to same regions in the learned latent representation space. Using our new VAE model, we can learn low dimensional latent representation for complex data that captures intra-class variance and inter-class similarities. The ability to learn such high quality low dimensional representation for any data would reduce any complex classification problem to simple clustering problem.\n\nAll our experiments in this project were carried out using Python and its different libraries. In particular we make extensive use of PyTorch, a Python based Deep Learning framework. We believe that our approach can benefit diverse communities attending PyCon who are looking for ways to integrate machine learning algorithms to solve similar tasks that our approach is designed to tackle. In our poster, we will showcase the relevant Python tools one could use to reproduce our experiments and tackle similar tasks in their domains.\n\nAttendees will learn how machine learning can be used to learn features for rare events in semi-supervised manner where standard supervised learning approaches fail. We will go over how we use PyTorch deep learning framework to develop our models step by step. Attendees will also learn how our technique can potentially be used in clinical and medical settings for rare disease and event identification.","papercall_name":"Py_Health_Squad: Hassan Sami Adnan, Hassan Saad Ifti, Samara Sharmeen, Haque Ishfaq, Atia Amin"},{"id":"118","name":"喜多智也","title":"ブロックチェーンアプリのトランザクションに対するデータ分析","abstract":"多くのブロックチェーンアプリはトークンと呼ばれるデジタル的な貨幣やアイテムを扱っています。このトークンのやり取りに関わるトランザクションを分析します。","talk_format":"Talk (15 minutes)","profile":"エンジニア\n大学での研究は自然言語処理\n仕事ではブロックチェーン\nGotanda.js スタッフ","room":"Convention Hall UGUISU","day":"1","no":"4","room_id":"1004","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Fintech","description":"### 背景\nブロックチェーンはハッシュ関数や電子署名などの暗号技術とP2Pネットワーク技術を用いた分散データベースです。多くの場合、次の特徴を持ちます。\n\n- データの改ざん検出が容易\n- ユーザーはデータの所有権を主張可能\n- データは公開されていて、全世界で同じデータを持つ\n\nEthereumはブロックチェーンの一種で、DAppのプラットフォームとしての側面を持ちます。開発者はトークンと呼ばれる現実世界の貨幣やアイテムに相当するものをEthereum上にデプロイし、このトークンを利用するDAppを開発します。  \nトークンの取引はEthereum上にトランザクションとして発行されます。Ethereumはブロックチェーンの一種であるため、このトランザクションは全世界中に公開されています。つまり「誰が」「どのDAppのトークンを」「誰に」に売買したかの情報が誰でもわかるわけです。  \nこのことを利用して、今回の発表ではDApp(主にゲーム)のトランザクションの分析を行います。人気のあるDApp、DApp間の類似度、トークンの価値の変化などの分析をコードを交えて紹介し、結果を可視化します。  \n\n### 方法\nBigQueryのPublic Dataset上にEthereumのトランザクションの情報が公開されています。  \n[https://cloud.google.com/blog/products/data-analytics/ethereum-bigquery-public-dataset-smart-contract-analytics](https://cloud.google.com/blog/products/data-analytics/ethereum-bigquery-public-dataset-smart-contract-analytics)  \n\n集計処理や分析にはこのデータセットを使います。また、分析結果の可視化にはJupyter Notebookを使います。\n\n\n### 分析例\n簡単な分析例を以下に示します。当日はDApp間の関係性や、分析結果をグラフにして可視化したものを紹介します。\n\n#### トランザクションの宛先ランキング\n次のSQLを叩くと「2019年5月に世界で一番トランザクションの宛先になったアドレス」を集計します。\n\n```\nSELECT COUNT(*) as count, to_address\nFROM `bigquery-public-data.ethereum_blockchain.transactions` AS transactions\nWHERE TRUE\n  AND transactions.block_timestamp >= '2019-05-01'\n  AND transactions.block_timestamp <= '2019-05-31'\nGROUP BY to_address\nORDER BY count DESC\n```\n\n#### 取引されているトークンランキング\n次のSQLを叩くと「2019年5月に世界で一番取引されたトークン」を集計します。\n\n```\nSELECT name, COUNT(*) AS count\nFROM `bigquery-public-data.ethereum_blockchain.token_transfers` AS token_transfers\nJOIN `bigquery-public-data.ethereum_blockchain.tokens` AS tokens ON token_transfers.token_address = tokens.address\nWHERE TRUE\n  AND token_transfers.block_timestamp >= '2019-05-01'\n  AND token_transfers.block_timestamp <= '2019-05-31'\nGROUP BY name\nORDER BY count DESC\n```\n","papercall_name":"喜多智也"},{"id":"119","name":"Higashiguchi Kazuki","title":"Pythonを使ったAPIサーバー開発を始める際に整備したCIとテスト機構","abstract":"Pythonアプリケーションを開発し始める際のCIでのコード検査とユニットテストの整備について取り上げます。CIについては、スタイルチェックやエラー解析の自動化、ユニットテストについては、実DBを利用するケース等事前の設計・機構等の必要な工夫を紹介します。","talk_format":"Talk (15 minutes)","profile":"BASE BANK, Inc.在籍。業務ではWebアプリケーション開発の全般業務を行う。","room":"Room D","day":"1","no":"4","room_id":"1005","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Project case studies","description":"このトークでは、私自身がPythonを業務で活用しはじめた際に準備しておいてよかったという経験について話すものです。具体的には、CIとユニットテスト機構の準備について紹介します。\n\n## CIについて\nCI（継続的インテグレーション）にて、自身が書いたコードがPythonの標準から外れていないか・問題がないかを検査しておくことは非常に有用です。CIが指摘する項目を修正することでコードの品質を保てることに加えて、Pythonを学習することができます。\n具体的には次のようなツール・ライブラリを使ったコード検査を紹介します。\n\n- pycodestyle\n- pydocstyle\n- pyflakes\n- mccabe\n\n## テスト機構について\nユニットテストを書くことは、特に不慣れな言語を扱う場合にとても有効です。無意識に発生してしまう欠陥コードの混入を排除できるといった品質面のメリットもありますが、ユニットテストがあることによるリファクタリングの容易さが大きなメリットです。業務で使うことによって日々レベルアップするPythonの知識を、スピーディにリファクタリングすることでプロダクションコードに反映することができます。\n具体的には、次の点について紹介します。\n\n- pytestを利用する\n- 実データベースを利用するコードをテストする機構を用意する\n- aiohttpを用いる場合のHTTP Handlerのテストの仕方\n- APIクライアントをテストするためのライブラリ\n- データベース・外部APIを使うクラスに依存しないためのコード設計","papercall_name":"Kazuki Higashiguchi"},{"id":"120","name":"Tetsuo Koyama","title":"Introduction to FEM Analysis with Python","abstract":"FEM is one of the methods to solve differential equations. Traditionally, Fortran and C is used to calculate FEM . But, thanks to GetFEM++(FEM library) and Mayavi (3D visualization library), it became easily performed on JupyterNotebook. This talk demonstrates the usefulness of these library.","talk_format":"Talk (15 minutes)","profile":"I'm a CAE engineer working in CAE software company. I want more Python users to use the convenient finite element method library GetFEM + + and the 3D visualization library Mayavi.","room":"Room A+B","day":"1","no":"5","room_id":"1001","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Beginner","tags":"Python in education(including science and maths)","description":"There is a 3 step in solving FEM.\n- Pre-proccesing.\n- Solving\n- Post-proccesing\nIn Pre-processing, we'll make model by GetFEM++ and solve the equation by GetFEM++. At the end in Post-proccesing, solution is visualized it in 3D by mayavi.\nAll the process is performed in Jupyter-Notebook.","papercall_name":"Tetsuo Koyama"},{"id":"121","name":"Daisuke Saito","title":"Doujin-activity with Ren'Py","abstract":"I have been using Ren’Py in Doujin activities. Ren’Py is Python based visual novel game engine. This talk demonstrates the benefits of using it. ","talk_format":"Talk (15 minutes)","profile":"Daisuke Saito is a researcher in computer science education. His hobby is game development.","room":"Convention Hall UME","day":"1","no":"5","room_id":"1003","lang_of_slide":"日本語と英語/Japanese and English","lang_of_talk":"英語/English","audience_level":"All","tags":"GUI and games","description":"## Introduction\nRen'Py is a Python-based game engine for developing a Novel game.\nI have used this engine for game development in Doujin activities for eight years. In this talk, I would like to convey the goodness of Ren'Py based on eight years of experience.\n\n## Advantages of Ren'Py\nAmong the advantages are:\n\n+ Low learning cost\n+ Easily develop cross-platform games\n+ GUI is simple and easy to understand\n+ Easy implementation using Python\n+ Implementation of the game is possible without using Python\n\nThere are many other benefits. This talk will also compare with other game engines.\n\n## Conclusion\nRen'Py is a novel game engine. The engine is implemented in Python and is easy to extend. Therefore, it is the best choice for those who want to make a game.\nAlso, in this talk, I would like to convey the goodness of handling Python in the development of my hobbies.\n\n## Outline\n+ Self-introduction(1 minutes)\n+ What is Ren'Py?(2 minutes)\n+ Advantages of Ren'py(5 minutes)\n+ Conclusion(5 minutes)\n+ QA(2 minutes)","papercall_name":"Daisuke Saito"},{"id":"122","name":"Tomoko FURUKI","title":"pandasのStyling機能で強化するJupyter実験レポート","abstract":"普段Jupyter Notebookで実験レポートを書くpandasユーザに向け、便利ながらも書籍等ではあまり紹介されないpandasのStyling機能について、利用例・使い方・注意点等を紹介します。","talk_format":"Talk (15 minutes)","profile":"大学では知能情報メディアを専攻し、就職後はPythonを使ったデータ活用のPoCや機械学習案件に従事。現在フリー。PyConJP登壇は2回目。","room":"Convention Hall UGUISU","day":"1","no":"5","room_id":"1004","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Machine learning and data science","description":"▼対象   \n① 普段Jupyter Notebookで実験レポートを書くpandasユーザーの方   \n\n▼内容   \n\n- Styling機能とは\n- Stylingを使うモチベーション\n- 例\n- 基本の使い方\n    - Styler\n    - applymapとapplyの違い\n- ビルトイン関数\n   - よく使うものはあらかじめ用意されている\n   - background_gradient\n   - bar\n   - キャプションをつける\n- Excelへのエクスポート\n- Styling使用時の注意点","papercall_name":"Tomoko FURUKI"},{"id":"123","name":"成瀬基樹","title":"ListはIteratorですか？","abstract":"タイトルの「ListはIteratorですか？」の答えは「いいえ」です。ListはIterableですがItera*tor*ではありません。このようなPython組込のクラスの型について発表します。","talk_format":"Talk (15 minutes)","profile":"Pythonが大好きです！趣味も仕事もウェブアプリ開発です。CPythonとtypeshedにコントリビュートしました。","room":"Room D","day":"1","no":"5","room_id":"1005","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Best practices","description":"タイトルの「ListはIteratorですか？」の答えは「いいえ」です。ListはIterableですがIteratorではありません。\n本発表の主役は[typing](https://docs.python.org/ja/3/library/typing.html)、[collections.abc](https://docs.python.org/ja/3/library/collections.abc.html)、それと[mypy](http://mypy-lang.org/)です。\nPythonにはintやlistといった様々な組込の型があります。本発表ではその中でもlist(typing.List)やdict(typing.Dict)といった、何かを保持するための型に特に焦点を合わせます。これらの型のうち、Pythonプログラマが最初に触れるのはlistやdictで、次にtuple(typing.Tuple)やset(typing.Set)、さらにiterator(typing.Iterator)と進むのが一般的だと思います。\nこれらは静的型チェックを行っていなくても、効率の良いプログラムを書こうと考えれば意識することになることです。これらの型を知っている、使っているだけではなく、それらの関係が分かると静的型チェックやドキュメントに引数の型をうまく書けるようになります。\n組込関数のsum()をイメージしてください。この組込関数と同じように、各要素の値を足し合わせる関数を自ら定義しないといけないとします。\n```\ndef sum_reinvention(items: ???) -> int:\n    total = 0\n    for item in items:\n        total += item\n    return total\n```\nこの関数の引数の`items`に対する適切な型ヒントは何でしょうか。List[int]は要件を満たしています。しかしここでIterable[int]と宣言することで、List以外にもTupleやDictを渡せる、より再利用しやすい関数になります。\n```\nsum_reinvention([1, 2, 3])\nsum_reinvention((1, 2, 3))\nsum_reinvention(range(4))\n```\nしかしIterable型というのは直接使う機会のないものなので、ListやTupleと比べると知名度で大きく劣ります。Iterableを知っていないとIterableと宣言できないのです。この発表では、そういった普段使わないが型ヒントで役に立つ型を取り上げます。\n何ができるのがIteratorなのかが分かればListがIteratorのではないことも分かります。","papercall_name":"Naruse Motoki"},{"id":"201","name":"Dustin Ingram","title":"Modern development environments for Pythonistas","abstract":"In this talk, we’ll take a look at common patterns to improve the local development environment for your Python package, enabling your new developers to get up and running fast, current developers to write code and iterate faster, and to improve portability between developers and their platforms.","talk_format":"Talk (45 minutes)","profile":"Dustin is a Developer Advocate at Google, focused on supporting the Python community on Google Cloud. He's also a member of the Python Packaging Authority, maintainer of the Python Package Index, and organizer for the PyTexas conference.","room":"Room A+B","day":"2","no":"1","room_id":"1001","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"All","tags":"Best practices","description":"If you've ever created a new software project from scratch, you've probably struggled with the \"n+1\" problem, or \"it works on my machine, now can we make it work on yours?\". Between Python versions, local dependencies, different package installers, different platforms, and more, the likelihood that we can quickly set up a development environment and move on to productive work sometimes feels slim.\n\nIn this talk, we'll take a look at common patterns for improving the local development environment for your Python package, enabling your new developers to get up and running fast, your current developers to write code and iterate faster, and to improve portability of your environment between developers and their respective platforms. We'll examine specific techniques, tools, and methodologies that will enable us to do this, and take a look at some prominent Python software projects to see what they can teach us.\n\nThis talk is for anyone who has struggled to set up their local development environment for a software project. This talk is useful for both open-source maintainers and for those working on\n\nAfter watching this talk, attendees should know exactly what they need to change to make any given codebase more accessible and approachable for new and current developers alike.\n\n# Outline\n\n* Introduction\n* An environment for development\n    * Eliminating inconsistencies between environments\n    * Optimizing for onboarding\n* An environment for your test suite\n    * Ensuring non-determinism\n    * Applications vs. libraries\n* A modern dependency workflow\n    * Hashing and pinning\n    * Auto-upgrading\n    * Ensuring nondeterministic behavior\n* Miscellanous: linting and autoformatting\n* Taking your environment to prod\n* Conclusion","papercall_name":"Dustin Ingram"},{"id":"202","name":"John Belmonte","title":"Inside a companion robot: Productive concurrency with Trio async-await ❤","abstract":"Robots are born of concurrency– yet concurrent programming is notoriously hard. Here’s how dread was transformed into productivity and fun thanks to a thoughtfully designed async-await library called Trio.","talk_format":"Talk (45 minutes)","profile":"Software engineer with ❤ at GROOVE X in Tokyo, with past lives in hardware engineering, virtual reality, video game development, financial systems, and cloud computing.","room":"Small Exhibition Hall","day":"2","no":"1","room_id":"1002","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"All","tags":"extending and embedding python in hardware","description":"Concurrency matters in the physical world– just ask a companion robot possessing 15 degrees of freedom, 50 sensors, and animal-like behavior. As a small team including animators and casual programmers, how would you manage the complexity of gluing the system together while delivering high level functionality and features? How would you avoid wasted months debugging race conditions and deadlocks, or fretting the pitfalls of parallel task communication and error handling? What if you were given only one core of a modest CPU? And how would you enable rapid real-time visualizations of the system with zero impact on production performance?\n\nI'll present the early-adopting, daring answer embraced for LOVOT:  **Python**, the **Trio async-await library**, and **❤**\n\nIf you appreciate the difficulties of concurrent programming, have battled real threads and lost, had a rough experience with asyncio or other async framework, or are simply interested in seeing what's possible when a great solution meets an interesting application– I hope you will gain from the talk.\n\nCovered items will include: an overview of Trio's *structured concurrency* and why Python is at the forefront of concurrency programming; highlights of how it's been applied to the LOVOT companion robot; Trio tooling strengths; an interactive web canvas server for embedded systems based on the Processing API;  a look at utilities built on Trio; troublesome points to watch out for; and a review of useful escape hatches.","papercall_name":"John Belmonte"},{"id":"203","name":"寺嶋 哲（Terajima Satoshi）","title":"Pythonで始めてみよう関数型プログラミング","abstract":"関数型言語の機能を提供するPythonパッケージを用いて、関数型言語の便利な機能を紹介し、どのようにPythonコードを改善する事ができるかを解説します。Pythonから関数型言語の世界に踏み入ってみましょう。","talk_format":"Talk (45 minutes)","profile":"Web系Pythonエンジニア at 株式会社SQUEEZE。Meguro.LYAHFGG（すごいHaskell本を原書で読む会）を主催中。","room":"Convention Hall UME","day":"2","no":"1","room_id":"1003","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Intermediate","tags":"Python libraries","description":"Pythonでは、関数型言語の機能は積極的には採用されていませんが、複雑な処理を簡潔に書けることから、関数型言語の機能を提供してくれるパッケージが多くあります。\n\nこのトークでは、そのようなパッケージをいくつか（fn.py, Pyrsistent, Pampy, PyMonad）取り上げ、Pythonで関数型言語スタイルでのプログラミングする方法を解説します。\n\nまず、関数型言語とはどんなのものなのかを概説し、Pythonではどのように関数型言語機能が実現されているかの分類を見ていきます。\n\n続いて、いくつかの代表的な関数型機能を取り上げ、多言語の例での機能の概念を説明し、PythonのライブラリでどのようにPythonコードが改善されるかを見ていきます。\n\n# このトークのゴール\n\n- 便利な関数型言語の機能を知ってもらう\n- Pythonを使って関数型言語スタイルでプログラミングする方法の概要を知ってもらう\n- Pythonで関数型言語を実現するパッケージの使い方・実現方法の概要を知ってもらう\n\n# 具体的な構成\n\n- 関数型言語とは\n- 関数型言語を使ったプログラミングスタイルの特徴\n- Pythonの関数型言語機能の実現方法分類\n    - 演算子オーバロード等を駆使し、パッケージとして関数型言語機能を実現する方法\n        - fn.py, Pyrsistent, Pampy, PyMonad等\n    - AST変換で実現する方法\n        - PyMacro\n    - Pythonコード、またはPython Bytecodeへのコンパイルで実現する方法\n        - Coconut,dg 等\n- 関数型言語の機能・実現するライブラリ紹介（仮）\n    - 機能ごとに以下を説明\n        - 関数型言語機能で解決したいPythonコード例の紹介\n        - 他言語での関数型言語機能の概念を説明\n        - 実現するPythonパッケージを紹介\n        - Pythonパッケージで書き換えたPythonコード例の紹介\n        - 実現方法の概要を説明\n        - 他のパッケージと組み合わせた時の注意点\n    - 扱う関数型言語の機能\n        - 関数合成（fn.py）\n        - カリー化 （fn.py）\n        - 永続データ構造（Pyrsistent）\n        - パターンマッチング （Pampy）\n        - モナド （PyMonad）\n    - まとめ\n\n# 話さないこと\n\n- Python標準の関数型機能\n    - itertools / functools","papercall_name":"Terajima Satoshi"},{"id":"204","name":"石田 光一","title":"KubernetesとJupyterHubで構築する機械学習eラーニングサイト","abstract":"JupyterHubはユーザごとにJupyter notebookを提供するシステムです。eラーニングサイトのKubernetes上でJupyterHubを運用するノウハウをお届けします。","talk_format":"Talk (45 minutes)","profile":"10Xでタベリーの開発をしているエンジニアです。業務委託で他の会社のサービスをよくするための技術相談や実装もやってます。","room":"Convention Hall UGUISU","day":"2","no":"1","room_id":"1004","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Python in education(including science and maths)","description":"### eラーニングサイトの紹介\n\neラーニングサイトをデモして、「機械学習のコンテンツ」と、そのコンテンツを写経するためにユーザごとに「Jupyter Notebook」がブラウザで実行できることを紹介します。サイトを紹介することによってこれから説明するアーキテクチャと運用がなぜ必要かが理解しやすくなります。\n\n### システムアーキテクチャの紹介\n\neラーニングサイト全体がどのように構築されているか紹介します。GCPをクラウドプラットフォームとしてGKEのKubernetes上にNuxt.jsでフロントエンド、Flaskでバックエンド、JupyterHubでJupyter Notebookを構築しています。\n\nJupyterHubは複数のユーザに機械学習用パッケージがインストール済みのJupyter Notebookをインターネット上からアクセスしやすくするためのものです。JupyterHubがどのような構成でどのようにKubernetes上で動作しているかも説明します。\n\n### なぜJupyterHubなのか\n\nJupyter Notebookをユーザごとに実行できる環境を用意するにはJupyterHubでなくてもGoogleのColaboratoryがあり無料で使えます。なぜ今回のeラーニングサイトではColaboratoryではなくJupyter Notebookを選定したか説明します。\n\n### JupyterHubをeラーニングサイトで安定運用するためにやっていること\n\nJupyterHubのみで使うにはデフォルトの設定でかまいませんがeラーニングのサイト内で使えるようにするには様々な工夫が必要です。本サイトで実施している以下の工夫を紹介します。\n\n* ユーザ認証のカスタマイズ: eラーニングサイトにログインしたらJupyterHubにもログインできるように独自のAuthenticatorを使っているのでその紹介をします\n* オートスケール: 費用を抑えるためと安定的にユーザに使ってもらえるようにするため、アクセスユーザ数によってサーバ数を増減しています。どのような基準でスケールしているのかと最適なインスタンスの選定基準を紹介します。\n* セキュリティ: Jupyter NotebookはKubernetes上のポッドで動いているのでシステムのクラスター内部に存在しています。そのため他のポッドを守るためセキュリティを厳しくする必要がありますがどのようにしているのか紹介します。\n* コンテンツ: 提供している「機械学習のコンテンツ」は頻繁に更新されます。コンテンツはCIが回っており正しくユーザが実行できることを保証した上でデプロイしています。その他にもユーザが演習課題を提出してチューターが採点するという機能もあります。それらがどのように実現しているかを紹介します。\n* 監視: 何をどのように監視すれば安定して運用できるのかを紹介します\n* その他の細かいカスタマイズを紹介します\n","papercall_name":"Koichi Ishida"},{"id":"205","name":"寺田　学","title":"Python Webフレームワーク比較","abstract":"Webフレームワークが持つべき機能を紹介し、各Webフレームワークが提供し ている範囲を比較します。フレームワーク選択の一つの指標になることを目指し、目的別にフレームワークを選択できるようになります。","talk_format":"Talk (45 minutes)","profile":"(株)CMSコミュニケーションズ代表取締役 Python Web関係の業務を中心にコンサルティングや構築を手がけている。","room":"Room D","day":"2","no":"1","room_id":"1005","lang_of_slide":"日本語と英語/Japanese and English","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Web programming(including web frameworks) ","description":"このトークでは、以下の4つのパートに分けて説明をします。\n\n- Webフレームワークとは　(フレームワークの定義)\n- Webフレームワークが持つ機能\n- Python Webフレームワークの種類と特徴を紹介と比較\n- 目的別フレームワーク選択の方法\n\n機能の説明では、テンプレート層、URLディスパッチ、リクエストオブジェクトの扱い、cookieの扱い、ストレージ層などの簡単な説明を行います。\n紹介するフレームワークは、Django、Flask、Pyramid、Zope、Tornado、aiohttp、Guillotina、Bottle、responderの9種類の予定です。\nそれぞれのフレームワーク毎に、各機能がどのように提供されているのかを比較検討していきます。\n最後に、いくつかのケーススタディとして、目的別にフレームワークを選択していく流れを確認します。\n","papercall_name":"Manabu TERADA"},{"id":"206","name":"Iskandar Setiadi","title":"Python Website is Slow? Think Again!","abstract":"In this talk, we will briefly explore how we achieved 60% cost savings and improved our Python website response time from 400 ms to 150 ms with various techniques.","talk_format":"Talk (30 minutes)","profile":"I am an Indonesian software engineer working for HENNGE, K.K. in Tokyo, Japan.","room":"Room A+B","day":"2","no":"2","room_id":"1001","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Intermediate","tags":"Web programming(including web frameworks) ","description":"As a Python avid user, we read a lot of articles that describe Python as a slow, interpreted language. At a certain point, some people start to blame the language itself for performance problems and consider to migrate their codebase to other languages. However, the success story of Instagram in handling four hundred million users has shown us that Python is not the bottleneck, but our codebase is.\n\nIn this talk, the speaker will share a tale of improving Python website performances in medium-sized enterprise (serving million users) that I’m currently working at. In a year, we finally achieved speed improvement from the average response time of 400 ms to 150 ms per request and we could save around $100k per year in AWS EC2 instance provisioning, which is around 60% of total cost.\n\nSeveral key points that we have learned from our development process includes:\n\n- Tracking database queries with Python decorator will reduce number of unnecessary queries\n- Using an async framework does not guarantee your codebase is implementing it correctly\n- Default configured third-party library is not always suitable for all use cases\n- Utilizing memory profiler and pdb properly will help you in pinpointing application bottleneck\n- Python for-loops vs generators\n- And several other common pitfalls","papercall_name":"Iskandar Setiadi"},{"id":"207","name":"森岡 崇","title":"婚活・恋活領域におけるPythonを使ったマッチング最適化","abstract":"晩婚・少子化が叫ばれる中、婚活・恋活分野でのIT活用が進んでいます。 本トークではPythonで開発されているマッチングアプリ「Dine」におけるマッチング最適化への取り組みをご紹介します。","talk_format":"Talk (30 minutes)","profile":"株式会社Mrk&Co Co-Founder, CTO","room":"Small Exhibition Hall","day":"2","no":"2","room_id":"1002","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Project case studies","description":"株式会社Mrk&Coではマッチングアプリ「Dine」を開発・運営しており、バックエンド開発はPythonで行われています。\nDineでは最適なマッチングを実現するために日々改善が続けられており、本トークではそこで得られた経験や知見についてお伝えします。\n具体的にはGoogle Cloud Dataflow (Apache Beam Python SDK)を使ったデータプロセッシング、Cloud Machine Learningを使った機械学習の活用を中心にお話する予定です。\n\n以下に興味のある方に特にお薦めです。\n* (領域問わず)マッチング最適化に関する技術\n* 婚活・恋活領域の技術\n* Pythonを使ったクラウド環境での大規模データ処理\n* 機械学習のビジネス適用事例\n","papercall_name":"Takashi Morioka"},{"id":"208","name":"Raphael Gaschignard","title":"I will never restart! Automatic hot reloading in CPython","abstract":"In this talk we’ll cover how to exploit Python’s dynamism to be able to instantly update your program’s code, all while keeping them running!","talk_format":"Talk (30 minutes)","profile":"I have been hacking on Django for the past 5 years. Ask me about migrations or Typescript!","room":"Convention Hall UME","day":"2","no":"2","room_id":"1003","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Intermediate","tags":"Anything else basically which doesn’t really fall into the types of topics above","description":"Python has a lot of powerful dynamic features just waiting to be taken advantage of. A lot of people might know about REPL-based development, but with the right kind of tools, Python can provide a live coding-based development cycle.\n\nThis talk is going to cover `mighty_patcher`, a library that supports automatic hot reloading of Python. This lets you avoid classic \"auto-reload\" tricks that force you to restart your entire program. \n\nI will go over the basics of what this does, how it can be used (quicker testing, live coding, interactive art), and how it's implemented. Walking through the details of how this tool works should help people to rethink what is possible in Python once you become aware of how the internals work.","papercall_name":"Raphael Gaschignard"},{"id":"209","name":"田中 慎太郎","title":"Pythonでライブをしよう -FoxDotを使った新時代のPython活用法-","abstract":"本セッションではライブコーディングを実演しつつ、FoxDotというライブラリについてお話します。ここでいうライブコーディングとは、「生でプログラミングしながら、演奏すること」を指します。","talk_format":"Talk (30 minutes)","profile":"長野県長野市の会社、日本システム技研所属のプログラマ バックエンド開発からフロントエンド開発まで手掛けます","room":"Convention Hall UGUISU","day":"2","no":"2","room_id":"1004","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Python libraries","description":"本セッションでは実際にライブコーディングを交えつつ、[FoxDot](https://foxdot681713046.wordpress.com/)というライブラリについてお話しようと思います。\n\n## 話すこと\n- ライブコーディングについて\n- なぜライブコーディングをするのか\n- メディアアート分野で活用されるPython\n- シーケンサとの違い\n- 実演\n- FoxDotとは\n- FoxDotの構文\n- FoxDotの構文で用いているPythonの特殊メソッドについての解説（Pythonユーザ的な観点）\n\n## 話さないこと\n- 音楽の基礎的な話\n- メディアアートのこと","papercall_name":"Shintaro Tanaka"},{"id":"210","name":"深谷亮祐","title":"PyQt5で自分のためのIDEを作っちゃおう！","abstract":"統合開発環境を使うとき、「こんな機能がほしい」「この挙動はやや気に入らない」と思うことはありませんか？ このセッションでは、あなたが望む統合開発環境をPythonやPyQtで自作する方法を紹介します。","talk_format":"Talk (30 minutes)","profile":"自動運転ぽい仕事してます。競技プログラミングにはまっており、自作統合開発環境で戦いの日々。最近青コーダーになりました。","room":"Room D","day":"2","no":"2","room_id":"1005","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"GUI and games","description":"# 目的\nPyQt5をベースとして、自分が欲する機能を詰め込んだ自分だけのための統合開発環境を自作する方法を紹介します。\n題材は私が作ったRust言語向け競技プログラミング向け統合開発環境です。(Python製ですが、Rust向けIDE、ややこしい。)\n\n# 内容\n統合開発環境を作る、というとハードルが高く聞こえるかもしれませんが、\nQtにはプログラミング用エディタを自作できるだけコード補完、シンタックスハイライト付きエディタ)などを実装できるだけのAPIが整っています。\n\nQtのPythonバインディングとしてはPyQtなどが存在しますが、C++ではなくPythonで作ることで、コンパイルいらずだったり対話型デバッグもできたり、Pythonで作られた他のライブラリと容易に連携できるなど、C++で作るよりも開発を高速化できます(当社比)。\n\nしかし、PyQt5にはあまり書籍やwebで公開されているサンプルや開発ノウハウを公開した記事がなく、C++(Qt)が書かれたサンプルが多かったりします。\nそこでC++のQtサンプルをPyQtとして流用する方法や、その他対話型デバッガ(IDLE)を使ってGUIソフトをデバッグする方法などのGUIソフト開発ノウハウを紹介します。\n\nまた、ChromiumベースのPyQtWebEngineを使って競技プログラミングコンテストのサイトをブラウジングしたり、\npexpectを使って対話型デバッグ機能を実装して統合開発環境っぽい機能をつけたりといった、\n他ライブラリとの連携し自分がほしい機能をサポートする方法についてもお話します。\n\n# アウトプット\nhttps://github.com/fukatani/rujaion のように競技プログラミングなどの現場で実用に耐える統合開発環境が作れるようになります。","papercall_name":"fukatani"},{"id":"211","name":"ryo kato","title":"入門 自作検索エンジン","abstract":"普段Elasticsearchを使っているエンジニアが全文検索技術を学ぶためにpythonで全文検索エンジンの自作に入門しました。その経験から得られた知見や全文検索エンジンの作り方について発表します。","talk_format":"Talk (30 minutes)","profile":"twitter: @_ryook  新聞社でサーバーサイドの開発をしています。","room":"Room A+B","day":"2","no":"3","room_id":"1001","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Project case studies","description":"# はじめに\n昨年の磯さんの発表を見て、以前から興味のあった全文検索エンジンを自作してみました。\n検索エンジンの仕組みは知っていたけど、実際に自分で作ってみると当初思っていた以上に勉強になることが多かったです。\n発表を通じて検索エンジンの技術的な面白さと、既にあるものを自作する楽しさについて触れていきます。\n\n# 対象\n\n- 全文検索エンジンをなんとなく使っていて、もう少し詳しく知りたい人\n- 検索エンジンを自作したい人\n- 検索が好きな人\n\n既に検索エンジンを自作している人には物足りない内容になるかもしれませんが、高みから見物してやろうというかたの聴講もお待ちしています。\n\n\n# outline\n全文検索において必要な機能を説明しながらpythonでの実装方法や実装する際の注意点を紹介します。\n最後に自作することの良さについて話したいと思います。\n\n## 話すこと(時間によっては一部触れない可能性もあります。)\n\n- インデックス構築\n- インデックス圧縮\n- スコア計算\n- ngramと日本語の対応\n- クエリの拡張\n\n## 話さないこと\n- クローリング・スクレイピングについて\n\n## 目次(予定）\n\n- インデックス構築と単純な検索\n- TFIDFによるスコアリング\n- ngramの実装\n- 日本語への対応\n- and / or 検索\n- インデックス圧縮\n- これからの展望\n- まとめ\n","papercall_name":"ryo kato"},{"id":"212","name":"KAI HSU","title":"When AI meets 3000-year-old Chinese Palmistry","abstract":"As we know, a lot of people are obsessed with fortune telling, and palm reading is one of the easiest methods that everyone is able to get started in foreseeing their fortune. This talk used AI to recognize your future!","talk_format":"Talk (30 minutes)","profile":"I'm Kevin, a system architecture lover. I like to participate in conferences and meet powerful people. I also love Japan a lot and learn Japanese hard. Hope I can make lots of friends here.","room":"Small Exhibition Hall","day":"2","no":"3","room_id":"1002","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Intermediate","tags":"Machine learning and data science","description":"As we know, a lot of people are obsessed with fortune telling, and palm reading is one of the easiest methods that everyone is able to get started in foreseeing their fortune. However, many people still have problems with identifying the lines of their palm. Therefore, we came up with this idea: combining “palm reading”, “deep learning”, and “chatbot.”\n\n**Palm reading** We spent the first couple of hours at the hackathon to learned basic palmistry including relationship, career and health analyzation and prediction. Then, we labeled over 2000 pictures of real human palms and gave over 6000 scores of their relationship, career, and health respectively. (You can find our label file here.)\n\n**Deep learning** We use VGG-16(16-layer network) in Keras with Tensorflow backend as our CNN model. Using GPU to accelerate, we have trained 10 epochs and 1000 steps per epoch. The MSE of the model is 1.3066. Besides, the valuation MSE is 1.1721. Overall, the result is robust enough to predict a new palm. (You can find our code here.)\n\n**Chatbot** compared with App and Web, is more accessible to mobile users, and it is also easier to spread on social media. Therefore, we used Chatfuel to create an AI chatbot on Facebook Messenger. Below you can see the user flow of Handbot. The smooth UX we designed help us achieve 80% user retention rate. ","papercall_name":"徐愷"},{"id":"213","name":"Rei Suyama","title":"unittestで始めるユニットテスト入門","abstract":"標準ライブラリにあるunittestを使ったユニットテストの始め方を紹介します。また、テストフレームワークであるpytestとの比較、unittestからpytestへの以降についても解説します。","talk_format":"Talk (30 minutes)","profile":"尾道の向島で暮らすプログラマ。学生時代からずっとPython好き。シンプルなコード、シンプルな設計を目指してます。","room":"Convention Hall UME","day":"2","no":"3","room_id":"1003","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Best practices","description":"# unittestで始めるユニットテスト入門\n\n## 概要\nプログラムの品質を向上させるためにはユニットテストが不可欠です。\nPythonにはユニットテストのための標準ライブラリとしてunittestパッケージがあり、ユニットテストに必要な機能がすべて揃っています。\n本トークではこのunittestパッケージを使ったユニットテストの始め方を紹介します。\nまた、3rdパッケージとして人気のあるpytestとの比較、unittestからpytestへの以降についても解説します。\n\n## 詳細\n\n標準ライブラリの[unittestパッケージ](https://docs.python.org/ja/3/library/unittest.html)はユニットテストライブラリとしてとても優秀です。\nunittestを使うと簡単にユニットテストを導入できるため、その導入方法を紹介します。\n\nまた、unittestは次のような機能を備えています。\n\n- テストディスカバリとテストランナーによるユニットテストの実行\n- オブジェクトのモック化\n- 例外のテスト\n- パラメータを変えたテストの複数回実行\n\nunittestを使いこなすためにこれらの機能も紹介します。\n標準ライブラリを使いこなすことは流行に左右されない基本的なスキルを身に付けることにも繋がります。\n特にオブジェクトのモック化は、他のユニットテストライブラリを利用する際にも不可欠となる知識です。\n\n最後に人気のあるユニットテストパッケージであるpytestについても紹介します。\nunittestを使っておくと、プロジェクトの規模拡大に伴ったpytestの導入も難しくありません。\nunittestにはないpytestの優れた点を紹介し、実例をまじえてunittestを使ったプロジェクトへのpytestの導入を行います。","papercall_name":"Rei Suyama"},{"id":"214","name":"森野　慎也","title":"高速量子ゲートシミュレータ Qgate","abstract":"Qgateは、Pythonをベースに、CPU、GPUを演算エンジンとして持つ高速量子ゲートシミュレータです。コンセプト、内部で使われている技法の紹介に加え、他のSDKと組み合わせて、デモを行います。","talk_format":"Talk (30 minutes)","profile":"PythonとGPUを用いた量子ゲート、量子アニーリングのオープンソースプロジェクトを主宰しています。","room":"Convention Hall UGUISU","day":"2","no":"3","room_id":"1004","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Intermediate","tags":"Programming tools","description":"* 量子ゲートコンピューティングの基本概念\n\n* Qgateの設計コンセプト\n\n* 量子回路最適化手法とPythonを用いた実装の紹介\n\n* CPU/GPUを用いた演算高速化手法、およびC-extensionの実装\n\n* 量子回路シミュレーション ベンチマーク\n\n* Blueqatを用いたデモンストレーション\n","papercall_name":"Shinya Morino"},{"id":"215","name":"thinkAmi","title":"知ろう！使おう！HDF5ファイル！","abstract":"HDF5ファイルは機械学習だけでなく、データベースやファイルシステムとしても使えます。このトークでは、HDF5ファイルの概念、Pythonで扱うためのライブラリを利用例とともに紹介します。","talk_format":"Talk (30 minutes)","profile":"株式会社日本システム技研所属。Python/Webアプリケーションエンジニア。","room":"Room D","day":"2","no":"3","room_id":"1005","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Python libraries","description":"HDF5ファイルについて、知る・見る・作る・探すと段階を追って紹介します。\n\nまた、HDF5ファイルにはバージョンもあるため、公開されている資料から今後のバージョンアップ情報もお伝えします。\n\n　  \n\n## 目次\n\n### 1. 知ろう！\n\n- HDF5ファイルとHDF Groupについて\n- 使われている領域\n- HDF5ファイルの特徴\n\n### 2. 見よう！\n\n- ツールを使ってHDF5ファイルを覗いてみる\n  - HDFView\n  - ViTables\n  \n### 3. 作ろう！\n\n- Pythonライブラリ `h5py` と `PyTables`\n  - ライブラリの違い\n  - 作成したデータの互換性\n- h5pyとPyTablesによる操作\n  - 作成する\n    - 構造化 (Group)\n    - データの取扱\n      - 数値・文字列データ (Dataset)\n      - ファイル (Excel、画像)\n    - 付属情報 (Attribute)\n  - 更新・削除する\n  - データの圧縮\n    \n### 4. 探そう！\n\n- 階層検索\n  - h5pyのvisit()やvisititems()\n  - PyTablesのwalk_node()やwalk_group()\n- 付属情報(Attribute)の検索\n- ファイルの取り出し\n\n### 5. バージョンアップ！\n\n- 今後のロードマップ (公開資料より)\n  - クラウド対応\n  - Unicodeサポート\n- AndroidやiOSでは、使えるの？","papercall_name":"thinkAmi"},{"id":"216","name":"松田直樹","title":"新米Pythonistaが贈るAirflow入門 & 活用事例紹介","abstract":"Pythonでワークフローを定義してジョブのスケジューリング＆モニタリングを実現できるAirflowについて、その概要と業務でどのように活用し課題をクリアしたかを交えてお話しします。","talk_format":"Talk (15 minutes)","profile":"電通デジタルのエンジニア","room":"Room A+B","day":"2","no":"4","room_id":"1001","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Business efficiency solution","description":"デジタル広告の計測データを広告施策やPDCAに活かすためのプロダクトをつくる上で、利用しやすいデータへの加工、レポーティングが必要になります。\n本トークセッションでは、そのデータパイプラインを構築するにあたってPythonとAirflowを調べながら分析レポートを作成するパイプライン、分析しやすい環境を実際に構築した事例においてつまづいた点やそれらをどのように解決したかを交えご紹介します。\n\n## 話すこと\n1. Airflow概要と基礎知識\n2. Airflow活用事例\n     - Airflowあるある\n     - Airflowでつまずいたポイント\n     - 課題と解決策\n3. まとめ\n\n## 話さないこと\n機械学習、統計\n","papercall_name":"Naoki Matsuda"},{"id":"217","name":"加藤皓也（Hiroya Kato）","title":"メディアが運用すべき持続可能なVTuberをつくる技術","abstract":"VTuberは運用コストの高いコンテンツです。今回は、Pythonによる声質変換や文章要約を用いて運用コストを抑えたVTuber像を２案紹介します。併せて、声質変換モデルの構築方法も詳しく解説します。","talk_format":"Talk (15 minutes)","profile":"日経でフロント／バック／DevOpsを担うWebエンジニア。機械学習とVTuberとゲーム実況が好き。","room":"Small Exhibition Hall","day":"2","no":"4","room_id":"1002","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Project case studies","description":"一般にVTuber運用には、動画投稿やタレント活動など、定期的な活動が必要です。しかし、動画企画・制作のコストや\"中の人\"の属人性の高さから、VTuber運用の長期継続は困難です。\nそんなVTuber運用の課題に対し、メディアが持つリソースを用いた以下２つのVTuber像を提案します。\n\n- 自動生成型VTuber\n\t- メディアが毎日生み出す記事データを用いて自動生成する動画で運用するVTuberです。\n\t- Pythonでは、記事データの文章要約や、要約した文章の音声合成などの機能を実装します。\n- 多重人格型VTuber\n\t- どんな見た目・声の人が\"中の人\"になっても、常に同一のキャラクターとして振舞うことができるVTuberです。\n\t- Pythonでは、GANを用いた声質変換の機能を実装します。\n\n本セッションでは、これら２つのVTuber像を構成する技術について紹介します。\n今回は特に、後者の\"多重人格型VTuber\"を構成する声質変換について、初心者にも分かりやすいように詳しく解説する予定です。","papercall_name":"加藤皓也"},{"id":"218","name":"山入端孝浩","title":"機械学習ライブラリのPython API作成方法","abstract":"Jupyter Notebook上で機械学習ライブラリを実行するためには、Python APIの作成が必要です。本発表では完成までの作業内容や注意点などを実体験に基づいてお話しします。","talk_format":"Talk (15 minutes)","profile":"NECソリューションイノベータ株式会社にて分析プラットフォームの開発に従事。最近はシステムテストを担当。","room":"Convention Hall UME","day":"2","no":"4","room_id":"1003","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Machine learning and data science","description":"Jupyter Notebookはデータサイエンスの分野で広く利用されるようになっております。\nしかし、Jupyter Notebook上では基本的にPython APIでライブラリを実行するため、\nPython APIを持たない機械学習ライブラリは扱いにくく敬遠されがちという問題があります。\n\nそこで本発表では上記の問題を解決するために行った機械学習ライブラリのPython API化について\n実業務での体験談をもとにお話します。\n\n今後機械学習ライブラリのPython API化を行う方が発表者と同じ問題に直面しないよう\nPython API完成までの作業内容の説明と併せ、注意した(すべきだった)点や苦労した点などもお話します。\n\nなお発表の内容は機械学習以外のライブラリにも適用できると考えております。\n\nお話しする内容としては下記を予定しています。\n\n* 実装\n  * 機械学習ライブラリのコマンド実行モジュールの集約や機械学習ライブラリを実行する上で環境変数の設定なしで実行するための対処といった実装面の工夫についてお話します。\n  * subprocessモジュールを使用した際の標準出力の注意点についてお話します。\n* テスト\n  * Python APIとして追加で実施するテスト項目の方針についてお話します。\n  * Python APIから実行した場合とPytest経由で実行した場合でのメモリの使用量の違いによる性能評価の落とし穴についてお話します。\n","papercall_name":"山入端孝浩"},{"id":"219","name":"Enzo Calamia","title":"Getting Started with Asynchronous Python Web Development","abstract":"A few years ago, Python provided great tools for asynchronous programming since version 3.4 (asyncio) and version 3.5 (async/await syntax). As of 2019, the ecosystem around those new features has matured enough to launch your new backend using the asynchronous capabilities of Python.","talk_format":"Talk (15 minutes)","profile":"My name is Enzo. I come from France, where I was working as a software engineer in different startups using Python. Now, I live in Tokyo, and I work as an independent software consultant on several projects, which include Python. ","room":"Convention Hall UGUISU","day":"2","no":"4","room_id":"1004","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Intermediate","tags":"Web programming(including web frameworks) ","description":"In this short talk, I would like to present how to use the `aiohttp` library and `asyncpg` to implement a fully asynchronous typical Web service in Python. We'll see why asynchronous code can be a great fit for most Web services and how it compares with more traditional Web services in some real-world use-cases. At the end of the talk, I wish that the audience consider implementing their next project using the power of Python's `async` ecosystem, which grows day after day. \nThe audience is supposed to be familiar with Python's async/await syntax and Web backend development in general.","papercall_name":"Enzo Calamia"},{"id":"220","name":"nikkie","title":"Anaconda環境運用TIPS 〜Anacondaの環境構築について知る・質問に答えられるようになる〜","abstract":"初学者にAnacondaユーザが増えていますが、Anacondaで発生した問題の解決に自信のあるPython使いは少ないと思います。初学者にも初学者の質問に答える方にも拠り所となる情報を共有します","talk_format":"Talk (15 minutes)","profile":"「にっきー」と読むハンドルネームで活動するPython使い（歴は約2年）。初学者にPythonを教える経験が多め","room":"Room D","day":"2","no":"4","room_id":"1005","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Best practices","description":"### 問題意識\n\n- 初心者はAnacondaでの環境構築に触れる機会が多い\n- それに対して、Pythonista全員がAnacondaの知識があるわけではない（そのため初心者からのAnacondaの質問に答えられないこともある）\n- また、ネット上のPython環境構築情報には、Anacondaで環境構築した後、パッケージを`pip install`させるという危険な手順が散見される\n\n### 問題を解決する方法\n\n- 本トークで初心者にはAnacondaの環境構築のTIPSを伝え、そもそもAnacondaの質問が発生しにくくする（危険な手順の問題にもアプローチ）\n- 加えて、中級者・上級者にはAnacondaの質問に回答するためのよりどころとなる情報を提供する\n\nAnacondaを排除するのではなく、**一つの選択肢として残し、環境構築方法の多様性を保ちたい**という意図です。  \nAnacondaという題材については、全Pythonistaが知るべきと考えています。\n\n### トークの流れ（案）\n\n日本語を予定しています。  \n※現時点の考えのため、今後の調査・検証によって変更になる可能性があります\n\n- Anacondaとは\n- 問題意識の共有（Anacondaの環境構築方法は広く知られていないために上記のような問題があります）\n- Anaconda環境の運用TIPS（検証結果次第ですが、condaでPythonのバージョンを分離し、venvで仮想環境構築、pipでパッケージ管理と伝える予定です）\n- 時間の許す限り、裏付けの話（condaコマンドやvenvモジュールで何が行われているのか、conda installとpip installの仕組み、など）\n\n### Anacondaとpython.orgからインストールしたPythonを取り上げる理由\n\nこの記載は、homebrewやpyenvなどを取り上げない理由の説明でもあります\n\n- 各種チュートリアルで**よく案内される方法がpython.orgからのインストール**（[Django Girls Tutorial](https://tutorial.djangogirls.org/ja/django_installation/)や[PyNyumonテキスト](https://github.com/pynyumon/pynyumon/blob/master/0_preparation.md)、[pycampテキスト](https://pycamp.pycon.jp/textbook/1_install.html)）\n- 日本語の**入門書はAnacondaで環境構築**する本が増えている印象（入門者とAnacondaの接点が多いと考えている）\n- →この2つにより、Anacondaとpython.orgからインストールしたPythonが併用されてしまう\n- [JetBrainsのPythonについてのsurvey (2018)](https://www.jetbrains.com/research/python-developers-survey-2018/)では、python.orgが2位、Anacondaが3位\n  - （1位はbrewやaptでのインストールですが、入門者はWindowsかMacを使うことが多い印象なので、それらに関わりが深い2位と3位を取り上げます）","papercall_name":"Takuya Futatsugi"},{"id":"221","name":"Kazuya Takei","title":" Ansibleを通じて「べき等性」を理解してみよう","abstract":"構成管理ツールでは「べき等性」という概念が重要視されています。 \nPython製構成管理ツールのAnsibleを読んだり書いたりしながら、\n「べき等性っていいな」という気分にぜひなってみませんか？","talk_format":"Talk (15 minutes)","profile":"ニジボックス所属のインフラ寄りバックエンド系スタックフルエンジニア。\nプライベートではよくErrbotと戯れています。","room":"Room A+B","day":"2","no":"5","room_id":"1001","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"System administration","description":"すっかりInfrastructure as Code(IaC)がコモディティ化しつつありますが、このIaCな世界で重要視されている概念が「冪等(べきとう)性」です。\n\nIaCを実現するための構成管理ツールは、セットアップ処理一つ一つ冪等性を持つように設計されています。\nそのため、サーバー・インフラの構成内容を宣言的に記述することが可能となっています。\n\nでは、実際にどうやって冪等性を実現しているのでしょうか？\n\n\nこのトークでは、Python製の構成管理ツールであるAnsibleを通じて、べき等性の概念と利点を理解しつつ、どう実現してるのかを紹介します。","papercall_name":"kAZUYA tAKEI"},{"id":"222","name":"熊谷　拓也","title":"DjangoとJupyterで始めるPyData","abstract":"DjangoやJupyterを用いたデータ分析はPython界隈で最近よく流行してますが、Djangoの拡張ライブラリを利用することでJupyterを導入でき、相互の強みを活かした利用が出来ます。本トークでは、Django×Jupyterな環境を作った話と、その環境で出来ることをお話しします。","talk_format":"Talk (15 minutes)","profile":"PythonとJavaScriptと野球をこよなく愛するWeb系エンジニア。都内のPythonもくもく会によく出没する。","room":"Small Exhibition Hall","day":"2","no":"5","room_id":"1002","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Web programming(including web frameworks) ","description":"## 概要\nDjangoにJupyterNotebookを導入することで、DjangoのモデルをJupyter上で利用することが出来ます。\nこれにより、Djangoの強力なORMをJupyterによるデータの操作、可視化に活かすことが出来ます。\nまたDjango×Jupyterの環境を作ることで軽い確認をJupyter、完成したものはDjangoによってバックエンドAPI化などの使い分けを同一環境で出来るようになります。\n私はDockerを用いてDjango×Jupyterな環境を作り、趣味の野球のデータ分析に役立てました。\n本トークでは環境作りのお話と、その環境でこんなことが出来る、といった点を紹介致します。\nPythonでデータを集計・分析する際の、基盤のようなものにDjango×Jupyterの環境がなることが出来れば、と思います。\n\n## 話すこと\n- DjangoとJupyter、それぞれ簡単な紹介\n- Dockerの設定\n- 必要なライブラリ\n- 環境構築の手順と勘どころ\n- 利用例\n","papercall_name":"熊谷　拓也"},{"id":"223","name":"Hassan Sami Adnan; Hassan Saad Ifti; Samara Sharmeen; Haque Ishfaq; Atia Amin","title":"Simulation Model for 3D-printed Drug Development","abstract":"Complimentary to oral drugs, personalised 3D-printed formulations can add value to patient demands where the release of the drug can be controlled and optimised to the patient’s health needs. Research is being done to establish drug delivery mechanisms that provide sustained- and controlled-release profiles of active pharmaceutical ingredients using 3D-printed scaffolds and similar additive manufacturing. Designing such scaffolds and prototypes can be time-consuming and costly given the novel approach and emerging equipments and technologies that are necessary. Furthermore, failed prototypes cannot be changed once printed limiting researchers to try out different configurations or change other design factors. The required wall-topology of the scaffolds is dependent on the fluidic behaviour of the inner ingredients in liquid form whilst exiting through the scaffold wall. A practical method to drive this releasing process is to store the inner liquid at a higher pressure than the average ambient pressure.","talk_format":"Talk (15 minutes)","profile":"This talk will be one of the 2 talks the authors are presenting at PyCon JP. It’s by a multidisciplinary team of 5 researchers. Each will cover certain aspects of the talk and engage in the discussion. The speakers have a long history of giving talks at their respective universities on related academic topics. Recently they presented this work at PyCon 2019, Cleveland OH. The talk will help create awareness of how Python can be implemented in healthcare and other related emerging areas.","room":"Convention Hall UME","day":"2","no":"5","room_id":"1003","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"All","tags":"Anything else basically which doesn’t really fall into the types of topics above","description":"Complimentary to oral drugs, personalised 3D-printed formulations can add value to patient demands where the release of the drug can be controlled and optimised to the patient’s health needs. Research is being done to establish drug delivery mechanisms that provide sustained- and controlled-release profiles of active pharmaceutical ingredients using 3D-printed scaffolds and similar additive manufacturing.\n\nDesigning such scaffolds and prototypes can be time-consuming and costly given the novel approach and emerging equipments and technologies that are necessary. Furthermore, failed prototypes cannot be changed once printed limiting researchers to try out different configurations or change other design factors.\n\nThe required wall-topology of the scaffolds is dependent on the fluidic behaviour of the inner ingredients in liquid form whilst exiting through the scaffold wall. A practical method to drive this releasing process is to store the inner liquid at a higher pressure than the average ambient pressure in the stomach. The rate at which the liquid is released is determined by this pressure differential and the wall-topology, i.e. the passage diameter, length, surface-roughness, and structure. This fluidic behaviour can be modeled by a one-dimensional equation where the pressure differential is proportional to the releasing rate of the liquid-volume. The factor of proportionality here is intrinsically dependent on the wall-topology. Hence, determining this factor for a given pressure differential and releasing rate of the drug can directly suggest the required wall-topology for the scaffold. This model will instantly enable researchers to start testing their designs for effectiveness and efficiency before the prototype is printed, thus decrease waste, financial burden, and time consumption.\n\nTo our knowledge, this is the first time that this approach has been taken. At PyCon JP, we foresee to present our model in form of a talk. The model is simulated using Python and the Gauss-Seidel algorithm. This model further demonstrates a novel combination of the field of medicine and fluid dynamics, where Python—as an open source language—acts as a viable bridge. We believe this will showcase the limitless possibilities of Python and enable us to connect with similarly motivated Python enthusiasts.\n\nAttendees will get an idea of how Python can be used in medicine, in this case running simulations of drug release profile in 3D-printed scaffold design. First, the attendees will be presented with real-world medical challenges where Python can help solve these. Second, a solution will be presented and implementation will be discussed. The talk will also provide the opportunity for an interactive discussion with the speakers and give the attendees the scope of collaboration to our open source approach with Python.","papercall_name":"Py_Health_Squad: Hassan Sami Adnan, Hassan Saad Ifti, Samara Sharmeen, Haque Ishfaq, Atia Amin"},{"id":"224","name":"ku-mu","title":"チームメイトのためにdocstringを書こう","abstract":"自分が昔書いたコード、チームメイトが書いたコードがなにしているのかわからない…そんなことってよくありますよね。 そんな悩みを少しでも解決するため、コード内に簡単にドキュメントを書けるdocstringの書き方やドキュメントの自動生成方法を紹介していきます。","talk_format":"Talk (15 minutes)","profile":"ゲームプログラマから機械学習専門インフラ(MLOps)エンジニアにジョブチェンしました","room":"Convention Hall UGUISU","day":"2","no":"5","room_id":"1004","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"Programming tools","description":"docstringとは、コード内に書くドキュメントです。\ndocstringを書いておくことによってクラスや関数の役割を伝えることができます。\n\n初心者の方や、分析でPythonを使ってる方たちにはあまり馴染みがないかもしれません。\n\nメンテナンスしやすいコードを書くための1つの術として、\n今回はdocstringについて\n\n- どんなことを書くべきなのか\n- どんな書き方があるのか\n- どんな情報を埋め込めるのか\n\nということをお話したいと思います。\n","papercall_name":"ku-mu"},{"id":"225","name":"あべんべん","title":" pytestによるCIレボリューション","abstract":"Pythonは非常に扱いやすい言語です。しかし、しっかりテストしないとプロダクトが台無しになるかもしれませんので、テストの方法としてpytestを使ったクラウドベースのCIの有用性について紹介します。","talk_format":"Talk (15 minutes)","profile":"金融機関の研究所で技術調査や研究業務支援をしながら、6つのITコミュニティの運営、技術書の執筆・査読をしてます。","room":"Room D","day":"2","no":"5","room_id":"1005","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Programming tools","description":"皆さんはPythonでユニットテストやCIツールを使いこなせているでしょうか？そういった悩みへの参考としてユニットテストやCIツールの概要や種類について解説をしてから、その中でもPytestを使った場合のメリットや開発プロセス全体への波及効果について発表します。","papercall_name":"あべんべん"},{"id":"151","name":"Atsushi Odagiri","title":"Python開発を円滑に進めるためのツール設定","abstract":"実際の開発ではただ動かすだけでなく、品質をあげるためにレビューやコーディング規約のチェックなどが行われます。 Pythonでの開発で利用できる規約や静的解析を行うflake8をはじめとしたツールを活用して開発を円滑に進められる環境づくりを行います。","talk_format":"Talk (45 minutes)","profile":"株式会社オープンコレクター所属","room":"Large Exhibition Hall","day":"1","no":"1","room_id":"1006","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"Beginner","tags":"Beginner Session","description":"- flake8\n- black\n- mypy\n- pytestにいれておいてほしいアドオン randomly coverage\n- toxやnoxでまとめてチェック\n- ツールをエディタ上で動かす","papercall_name":""},{"id":"131","name":"petertc","title":"Is your bot ALIVE? Monitor chatbot from a user's perspective","abstract":"You may already know how to monitor an App or a web service, but how about a chatbot? This LT tells you why you should consider it, why it’s tricky and bring a little hacking on it.","talk_format":"Lightning Talks","profile":"#Pythonista #OpenSourceEnthusiast #ConferenceGuy  #BackendResearchEngineer \n\nhttp://hrchu.github.io\n","room":"Large Exhibition Hall","day":"1","no":"6","room_id":"1006","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"Intermediate","tags":"","description":"> If you want to sure your application is working for your users, you need to monitor it from a user's perspective.\n\nYou may already know how to do it for an App or a web service if you are an experienced DevOps/backend engineer. On the other hand, how to monitor a chatbot? In this LT, we would like to share some fascinating insight into it with you! \n\nIn five minutes, we will go through the following thing: \n\n* Why we should consider monitoring a chatbot from a user's perspective?\n* Why monitor a chatbot is tricky? (So we have this talk here.)\n* What we tried (and failed) and our best-so-far solution\n\nNote that audiences need to know basic Python syntax since we always prefer to use Python to solve problems!","papercall_name":"petertc"},{"id":"132","name":"栗田真","title":"Pythonで始めるオレオレブラウザ","abstract":"ソフトやOSにといった開発環境に強い制限を受ける職場は未だ存在するが、Pythonなら導入が許可される。今回、Pythonを利用して自分が使いやすいブラウザを作るまでの取り組みについて紹介する。","talk_format":"Lightning Talks","profile":"フューチャー株式会社所属。人工衛星開発と工場制御系システムに従事した後、現職。制御系の他、LinuxやNWが好き。","room":"Large Exhibition Hall","day":"1","no":"6","room_id":"1006","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"","description":"エンジニアとしては自分好みの環境を構築し、効率的に業務をこなしたいと考えるが、必ずしもそれは叶うものではない。\n会社PCのOSといえばWindowsが根強く、Win10とEdgeが2015年にリリースされた一方で、未だWin7以前の環境でIEのみが許可された職場が存在する。\n業務に必要なソフトであればインストールが認められるが、昨今データ解析などにより世間一般で知名度と市民権を獲得したPythonはインストールしやすいソフトの筆頭であり、モジュールと組み合わせることによってブラウザエンジンを利用することができる。\n\nブラウザは普段使っているし知っているものでもあるが、自分で実装してみるとまた勝手が違い、\"車輪の再実装\"の意義を感じられた。\n今回Pythonと関係モジュール（PyQt5）を別用途でインストールした後、自身の業務効率化を行うために取り組んだ開発について紹介する。\n\n\n# PyQt5とは\n\nQtはC++のクロスプラットフォームフレームワークで、GUIツールの開発を行える。QtはRubyやJava等多くの言語へのバインディングがなされていて、そのうちPython用に作られたのがPyQtであり、そのうちQt5に対応するのがPyQt5である。","papercall_name":"栗田真"},{"id":"133","name":"Wei Lee","title":"How to get more than just PyCon in a PyCon","abstract":"Have you ever think of why you attend a PyCon while the talks are updated shortly? Let's find out what more we can expect in a PyCon!","talk_format":"Lightning Talks","profile":"Wei Lee is a software engineer at Rakuten Slice, and now also a volunteer of PyCon TW.","room":"Large Exhibition Hall","day":"1","no":"6","room_id":"1006","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"All","tags":"","description":"Have you ever think of why you attend a PyCon while most of the talks are updated shortly? Surely, there are much more to expect than just technical talks.  \nWhen I went to PyCon US this May, I found the people are not just for the talks. Instead, they were there to interact with other Pythonists.  \nRecent years, PyCon TW puts much effort into making it a better place for Pythonists to interact.  \nIn this talk, I will share my thought on how to get the most of a PyCon and how PyCon TW thrive on cultivating a better conference culture.\n","papercall_name":"Wei Lee"},{"id":"231","name":"Shunsuke Kawai","title":"Python製シェル xonshの紹介","abstract":"Pythonで書かれたPythonが実行可能なShell「xonsh」の紹介をします。Shell Scriptと実際の使用感を比較しながら、Shellの深い世界にPythonから入り込みましょう。","talk_format":"Lightning Talks","profile":"M3, Inc. ML engineer. ptkやjupyter、xonsh等Python周辺ツールのコミッタが趣味.","room":"Large Exhibition Hall","day":"2","no":"6","room_id":"1006","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"","description":"# Abstract\n[xonsh](https://github.com/xonsh/xonsh)は、Pythonで作られたクロスプラットフォーム、Unixライクなシェル言語とコマンドプロンプトです。拡張されたSyntaxによって、sh + Pythonインタプリタのような取扱が可能です。  \n以下のようにPythonの変数空間を参照する事もできれば、サブプロセスを利用してshell scriptの結果を得る事もできます。  \n  \n> $ import sys  \n> $ echo @(sys.version_info.major)  \n> 3  \n> $ for x in !(ls ~/work/):  \n>    　　print(x)  \n> readme.txt  \n> sample.py  \n  \nxonshの基本理念といくつかの記法を理解するだけで、Pythonの多くの資産を使いながら、複雑なシェルの構文をカスタマイズし、普段の作業がより効率的で素晴らしい体験になるでしょう。  \n  \n本発表では、Pythonで書かれたPythonが実行可能なShell「xonsh」の紹介をします。複雑なShellScriptを書く日々を抜け出して、Pythonでより簡単により複雑な動作を定義し、皆さんのシェル上での作業を豊かにしていく足がかり\bを提供します。  \nbash、fishと比較しながら、Pythonでシェルを扱える事のメリット、デメリットとその将来性について、xonsh contributorの私が時間が許す限り熱弁します。  \n\n# Speaker\n - [@vaaaaanquish](https://vaaaaanquish.jp)\n     - xonsh contributor\n     - xonshの拡張パッケージであるxontribを複数作成\n     - [Xonsh Advent Calendar 2017](https://qiita.com/advent-calendar/2017/xonsh)、[Xonsh Advent Calendar 2018](https://qiita.com/advent-calendar/2018/xonsh)を企画、xonshの様々な機能について20記事以上を執筆","papercall_name":"河合俊典"},{"id":"232","name":"Huang Kunxian","title":"Python in the Belle II experiment","abstract":"This lightning talk gives audience that how python have influence in particle physics experiment, and outreach of our experiment. I hope that python society can have some interest on the physics experiment. Science society and python society can develop more packages to solve science problem.","talk_format":"Lightning Talks","profile":"I am a postdoc in Taiwan University, and graduated from Kyoto University. Now, I still work on Japan experiment– Belle II experiment. I am a Python lover and finished my PhD thesis work by Python packages. However, I have never contacted in Japan Python society. Hope I can meet some python-lovers interested in physics.","room":"Large Exhibition Hall","day":"2","no":"6","room_id":"1006","lang_of_slide":"English Only","lang_of_talk":"英語/English","audience_level":"All","tags":"","description":"At present, the complex of high energy physics experiment produce \"Big data\" that has scale larger than 10 PB of per year. The Belle II experiment is using electron-positron accelerator to produce mass B meson in Tsukuba city, Japan. The pixel number of the Belle II detector is O(10^6), and we expect the maximum data rate is about 30 kHz. This talk shows the brief description that how python is used in online monitoring, grid computing, numerical data analysis, and graphical plot in the Belle II experiment. This lightning talk will give an introduction of the belle II software which is build by python and C++14. There are future open source plan and open data plan of the Belle II experiment, and this talk also gives a short description about these plans. ","papercall_name":"b89202027@gmail.com"},{"id":"233","name":"長谷川大耀","title":"pythonで、処理をより効率化するためのTips集","abstract":"弊社の広告配信では、大量のログを少しでも速く省メモリで処理が実行できるように、日々工夫をしております。その中から、コードのちょっとした工夫で処理をより効率化できた例を紹介できればと思います。","talk_format":"Lightning Talks","profile":"生命物理学を研究した後、Fringe81に入社。現在はデータサイエンティストとして開発に携わってます","room":"Large Exhibition Hall","day":"2","no":"6","room_id":"1006","lang_of_slide":"日本語のみ/Japanese Only","lang_of_talk":"日本語/Japanese","audience_level":"All","tags":"","description":"弊社の広告配信では、膨大な量のリクエストにより生じたログを、機械学習システムでより有益に新鮮なうちに活用するため、塵も積もればの精神で、少しずつ処理をより効率的に行うための改善をしてきました。一つ一つの工夫はは微々たるものかもしれませんが、積み上げていくと、如実に効果を発揮します。内容自体は基本的なものも、ニッチなものもありますが、どれも難易度的には高くなく、頭の隅においておくとどこかで役立つかもしれません。\n\n想定している聴講者としては、\n\n1. ある程度のデータの処理が必要だが、大掛かりな環境を整える程でもなく、pythonで処理を完結させたい\n2. 非効率な処理のボトルネック自体はわかっているが、打ち手がいまいち思いつかない\n\n方です。\n内容はpython及び、numpy,pandas,scipyなどのライブラリで行えるものに限ります。\n分散フレームワークなどを応用した内容には踏み込みません。\n\n具体的には、以下のような発表内容を考えております。\n\n## アウトライン\n- 課題1: オブジェクトが大き過ぎてメモリに乗らない\n\t- yieldをうまく使って、ストリーム処理ができないか検討する\n- 課題2: 何度も同じ外部APIを叩く必要があって、ネットワーク通信に時間がかかる\n\t- functoolの@lru_cacheを使って、返り値をキャッシュできないか考える\n- 課題3: カテゴリ変数を[one-hot encoding](https://ja.wikipedia.org/wiki/One-hot)するのに時間がかかる\n\t- [scipy.sparseのcoo形式を利用して処理を効率化させよう](https://qiita.com/hiroaki_hase/items/369fbd57318d8a976999)(過去に私が書いた記事です)\n- 課題4: pythonで行うより、shellで行った方が速い処理がある\n\t- subprocessを使うことを検討する\n\nあくまで一例であり、場合によっては変更、追加するかもしれません。","papercall_name":"Hiroaki Hasegawa"}]